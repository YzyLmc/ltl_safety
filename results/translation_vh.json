{
    "mobile_manip": {
        "0": {
            "0_1": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "apple": "B",
                                "bathroom": "C",
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(C) F is_in(B,A)"
                        ],
                        "sym_utt": [
                            "go to C means you have to go to put B in the A later"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(apple,fridge)",
                            "b": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "apple",
                            "C": "bathroom"
                        },
                        "predicate": {
                            "a": "is_in(B,A)",
                            "b": "agent_at(C)"
                        },
                        "unified_ltl": "G i b F a"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "apple": "B",
                                "bathroom": "C",
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(C) F is_in(B,A)"
                        ],
                        "sym_utt": [
                            "you must put B in A if you have been to C"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(apple,fridge)",
                            "b": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "fridge",
                            "C": "apple"
                        },
                        "predicate": {
                            "a": "is_in(C,B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "G i b F a"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "A"
                            },
                            {
                                "bathroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i is_open(A) F ! is_open(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "if you open A you need to close A later",
                            "you can only go to A twice"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "is_open(fridge)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "fridge"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "is_open(B)"
                        },
                        "unified_ltl": "& G i b F ! b ! F & a U a & ! a U ! a F & a U a & ! a U ! a F a"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "A"
                            },
                            {
                                "bathroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i is_open(A) F ! is_open(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't forget to close the A if you open it up",
                            "go to A no more than two times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)",
                            "b": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "fridge"
                        },
                        "predicate": {
                            "a": "is_open(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "& G i a F ! a ! F & b U b & ! b U ! b F & b U b & ! b U ! b F b"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "apple": "B",
                                "fridge": "A"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! is_in(B,A) is_grabbed(B)",
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "you have to enter B before A",
                            "you have to pick up B before placing the B into A",
                            "if you open A you need to close A later"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(apple,fridge)",
                            "b": "agent_at(bathroom)",
                            "c": "is_open(fridge)",
                            "d": "is_grabbed(apple)",
                            "h": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "fridge",
                            "C": "livingroom",
                            "D": "apple"
                        },
                        "predicate": {
                            "a": "is_in(D,B)",
                            "b": "agent_at(A)",
                            "c": "is_open(B)",
                            "d": "is_grabbed(D)",
                            "h": "agent_at(C)"
                        },
                        "unified_ltl": "& & W ! b h W ! a d G i c F ! c"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "apple": "A",
                                "fridge": "B"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! is_in(A,B) is_grabbed(A)",
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "never go to A before B",
                            "pick up A before you place it in the B",
                            "don't forget to close the A if you open it up"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "is_open(fridge)",
                            "c": "agent_at(livingroom)",
                            "d": "is_in(apple,fridge)",
                            "h": "is_grabbed(apple)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "fridge",
                            "C": "livingroom",
                            "D": "apple"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "is_open(B)",
                            "c": "agent_at(C)",
                            "d": "is_in(D,B)",
                            "h": "is_grabbed(D)"
                        },
                        "unified_ltl": "& & W ! a c W ! d h G i b F ! b"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "apple": "B",
                                "fridge": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "apple": "C",
                                "bathroom": "B",
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! is_in(B,A) is_grabbed(B)",
                            "G i is_open(A) F ! is_open(A)",
                            "G i agent_at(B) F is_in(C,A)"
                        ],
                        "sym_utt": [
                            "you have to enter B before A",
                            "you have to pick up B before placing the B into A",
                            "if you open A you need to close A later",
                            "go to B means you have to go to put C in the A later"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "is_in(apple,fridge)",
                            "c": "is_grabbed(apple)",
                            "d": "is_open(fridge)",
                            "h": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "bathroom",
                            "C": "livingroom",
                            "D": "apple"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "is_in(D,A)",
                            "c": "is_grabbed(D)",
                            "d": "is_open(A)",
                            "h": "agent_at(B)"
                        },
                        "unified_ltl": "& & & W ! h a W ! b c G i d F ! d G i h F b"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "apple": "B",
                                "fridge": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "apple": "A",
                                "bathroom": "C",
                                "fridge": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! is_in(B,A) is_grabbed(B)",
                            "G i is_open(A) F ! is_open(A)",
                            "G i agent_at(C) F is_in(A,B)"
                        ],
                        "sym_utt": [
                            "never go to B before A",
                            "pick up B before you place it in the A",
                            "don't forget to close the A if you open it up",
                            "you must put A in B if you have been to C"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_grabbed(apple)",
                            "b": "agent_at(livingroom)",
                            "c": "is_open(fridge)",
                            "d": "is_in(apple,fridge)",
                            "h": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "apple",
                            "B": "livingroom",
                            "C": "fridge",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "is_grabbed(A)",
                            "b": "agent_at(B)",
                            "c": "is_open(C)",
                            "d": "is_in(A,C)",
                            "h": "agent_at(D)"
                        },
                        "unified_ltl": "& & & W ! h b W ! d a G i c F ! c G i h F d"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "apple": "A",
                                "fridge": "B"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "apple": "B",
                                "bathroom": "A",
                                "fridge": "C"
                            },
                            {
                                "bathroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! is_in(A,B) is_grabbed(A)",
                            "G i is_open(A) F ! is_open(A)",
                            "G i agent_at(A) F is_in(B,C)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to enter B before A",
                            "you have to pick up A before placing the A into B",
                            "if you open A you need to close A later",
                            "go to A means you have to go to put B in the C later",
                            "you can only go to A twice"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bathroom)",
                            "c": "is_in(apple,fridge)",
                            "d": "is_open(fridge)",
                            "h": "is_grabbed(apple)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "fridge",
                            "C": "apple",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(D)",
                            "b": "agent_at(A)",
                            "c": "is_in(C,B)",
                            "d": "is_open(B)",
                            "h": "is_grabbed(C)"
                        },
                        "unified_ltl": "& & & & W ! b a W ! c h G i d F ! d G i b F c ! F & b U b & ! b U ! b F & b U b & ! b U ! b F b"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "apple": "B",
                                "fridge": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "apple": "B",
                                "bathroom": "C",
                                "fridge": "A"
                            },
                            {
                                "bathroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! is_in(B,A) is_grabbed(B)",
                            "G i is_open(A) F ! is_open(A)",
                            "G i agent_at(C) F is_in(B,A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "never go to B before A",
                            "pick up B before you place it in the A",
                            "don't forget to close the A if you open it up",
                            "you must put B in A if you have been to C",
                            "go to A no more than two times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "is_in(apple,fridge)",
                            "c": "agent_at(bathroom)",
                            "d": "is_open(fridge)",
                            "h": "is_grabbed(apple)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "livingroom",
                            "C": "apple",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "is_in(C,A)",
                            "c": "agent_at(D)",
                            "d": "is_open(A)",
                            "h": "is_grabbed(C)"
                        },
                        "unified_ltl": "& & & & W ! c a W ! b h G i d F ! d G i c F b ! F & c U c & ! c U ! c F & c U c & ! c U ! c F c"
                    }
                }
            },
            "0_9": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "A",
                                "microwave": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_open(B) ! is_open(A)"
                        ],
                        "sym_utt": [
                            "close the A before you open the B up"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(microwave)",
                            "b": "is_open(fridge)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "microwave"
                        },
                        "predicate": {
                            "a": "is_open(B)",
                            "b": "is_open(A)"
                        },
                        "unified_ltl": "W ! a ! b"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "B",
                                "microwave": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_open(A) ! is_open(B)"
                        ],
                        "sym_utt": [
                            "you cannot open A before you close the B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(microwave)",
                            "b": "is_open(fridge)"
                        },
                        "object": {
                            "A": "microwave",
                            "B": "fridge"
                        },
                        "predicate": {
                            "a": "is_open(A)",
                            "b": "is_open(B)"
                        },
                        "unified_ltl": "W ! a ! b"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "fridge": "A",
                                "salmon": "B"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(B) G ! agent_at(A)",
                            "W ! is_open(A) is_grabbed(B)"
                        ],
                        "sym_utt": [
                            "entering B means you cannot visit A even once",
                            "don't open A before picking up B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "is_open(fridge)",
                            "c": "agent_at(bathroom)",
                            "d": "is_grabbed(salmon)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "fridge",
                            "C": "bathroom",
                            "D": "salmon"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "is_open(B)",
                            "c": "agent_at(C)",
                            "d": "is_grabbed(D)"
                        },
                        "unified_ltl": "& G i c G ! a W ! b d"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "fridge": "A",
                                "salmon": "B"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(B) G ! agent_at(A)",
                            "W ! is_open(A) is_grabbed(B)"
                        ],
                        "sym_utt": [
                            "you can no longer visit A if you go into B",
                            "don't open A before picking up B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_grabbed(salmon)",
                            "b": "agent_at(livingroom)",
                            "c": "is_open(fridge)",
                            "d": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "fridge",
                            "C": "salmon",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "is_grabbed(C)",
                            "b": "agent_at(A)",
                            "c": "is_open(B)",
                            "d": "agent_at(D)"
                        },
                        "unified_ltl": "& G i d G ! b W ! c a"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            },
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "fridge": "A",
                                "salmon": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) G ! agent_at(B)",
                            "W ! is_open(A) is_grabbed(B)"
                        ],
                        "sym_utt": [
                            "you have to enter A before B",
                            "entering A means you cannot visit B even once",
                            "don't open A before picking up B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)",
                            "b": "agent_at(bathroom)",
                            "c": "is_grabbed(salmon)",
                            "d": "agent_at(livingroom)",
                            "h": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "bathroom",
                            "C": "salmon",
                            "D": "kitchen",
                            "H": "livingroom"
                        },
                        "predicate": {
                            "a": "is_open(A)",
                            "b": "agent_at(B)",
                            "c": "is_grabbed(C)",
                            "d": "agent_at(H)",
                            "h": "agent_at(D)"
                        },
                        "unified_ltl": "& & W ! h b G i b G ! d W ! a c"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "fridge": "B",
                                "salmon": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(A) G ! agent_at(B)",
                            "W ! is_open(B) is_grabbed(A)"
                        ],
                        "sym_utt": [
                            "never go to A before B",
                            "you can no longer visit B if you go into A",
                            "don't open B before picking up A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "is_open(fridge)",
                            "c": "agent_at(livingroom)",
                            "d": "agent_at(kitchen)",
                            "h": "is_grabbed(salmon)"
                        },
                        "object": {
                            "A": "salmon",
                            "B": "kitchen",
                            "C": "fridge",
                            "D": "livingroom",
                            "H": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(H)",
                            "b": "is_open(C)",
                            "c": "agent_at(D)",
                            "d": "agent_at(B)",
                            "h": "is_grabbed(A)"
                        },
                        "unified_ltl": "& & W ! d a G i a G ! c W ! b h"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            },
                            {
                                "livingroom": "B",
                                "sofa": "A"
                            },
                            {
                                "fridge": "A",
                                "salmon": "B"
                            },
                            {
                                "fridge": "B",
                                "microwave": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(B) agent_at(A)",
                            "W ! is_open(A) is_grabbed(B)",
                            "W ! is_open(A) ! is_open(B)"
                        ],
                        "sym_utt": [
                            "you have to enter A before B",
                            "you must go to A before entering B",
                            "don't open A before picking up B",
                            "close the B before you open the A up"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(microwave)",
                            "b": "agent_at(kitchen)",
                            "c": "agent_at(bathroom)",
                            "d": "is_grabbed(salmon)",
                            "h": "is_open(fridge)",
                            "j": "agent_at(sofa)",
                            "k": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "microwave",
                            "B": "salmon",
                            "C": "bathroom",
                            "D": "fridge",
                            "H": "livingroom",
                            "J": "kitchen",
                            "K": "sofa"
                        },
                        "predicate": {
                            "a": "is_open(A)",
                            "b": "agent_at(J)",
                            "c": "agent_at(C)",
                            "d": "is_grabbed(B)",
                            "h": "is_open(D)",
                            "j": "agent_at(K)",
                            "k": "agent_at(H)"
                        },
                        "unified_ltl": "& & & W ! b c W ! k j W ! h d W ! a ! h"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "livingroom": "A",
                                "sofa": "B"
                            },
                            {
                                "fridge": "A",
                                "salmon": "B"
                            },
                            {
                                "fridge": "A",
                                "microwave": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(B) F agent_at(A)",
                            "W ! is_open(A) is_grabbed(B)",
                            "W ! is_open(B) ! is_open(A)"
                        ],
                        "sym_utt": [
                            "never go to A before B",
                            "go to B will unlock A for you to visit",
                            "don't open A before picking up B",
                            "you cannot open B before you close the A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)",
                            "b": "agent_at(kitchen)",
                            "c": "agent_at(sofa)",
                            "d": "is_open(microwave)",
                            "h": "agent_at(bathroom)",
                            "j": "agent_at(livingroom)",
                            "k": "is_grabbed(salmon)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "sofa",
                            "C": "fridge",
                            "D": "livingroom",
                            "H": "kitchen",
                            "J": "salmon",
                            "K": "microwave"
                        },
                        "predicate": {
                            "a": "is_open(C)",
                            "b": "agent_at(H)",
                            "c": "agent_at(B)",
                            "d": "is_open(K)",
                            "h": "agent_at(A)",
                            "j": "agent_at(D)",
                            "k": "is_grabbed(J)"
                        },
                        "unified_ltl": "& & & W ! b h G i c F j W ! a k W ! d ! a"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            },
                            {
                                "livingroom": "A",
                                "sofa": "B"
                            },
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "fridge": "A",
                                "salmon": "B"
                            },
                            {
                                "fridge": "A",
                                "microwave": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(B) G ! agent_at(A)",
                            "W ! is_open(A) is_grabbed(B)",
                            "W ! is_open(B) ! is_open(A)"
                        ],
                        "sym_utt": [
                            "you have to enter A before B",
                            "you must go to B before entering A",
                            "entering B means you cannot visit A even once",
                            "don't open A before picking up B",
                            "close the A before you open the B up"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_grabbed(salmon)",
                            "b": "is_open(microwave)",
                            "c": "agent_at(sofa)",
                            "d": "agent_at(livingroom)",
                            "h": "agent_at(bathroom)",
                            "j": "agent_at(kitchen)",
                            "k": "is_open(fridge)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bathroom",
                            "C": "livingroom",
                            "D": "microwave",
                            "H": "sofa",
                            "J": "fridge",
                            "K": "salmon"
                        },
                        "predicate": {
                            "a": "is_grabbed(K)",
                            "b": "is_open(D)",
                            "c": "agent_at(H)",
                            "d": "agent_at(C)",
                            "h": "agent_at(B)",
                            "j": "agent_at(A)",
                            "k": "is_open(J)"
                        },
                        "unified_ltl": "& & & & W ! j h W ! d c G i h G ! d W ! k a W ! b ! k"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "livingroom": "B",
                                "sofa": "A"
                            },
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "fridge": "B",
                                "salmon": "A"
                            },
                            {
                                "fridge": "A",
                                "microwave": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "G i agent_at(B) G ! agent_at(A)",
                            "W ! is_open(B) is_grabbed(A)",
                            "W ! is_open(B) ! is_open(A)"
                        ],
                        "sym_utt": [
                            "never go to B before A",
                            "go to A will unlock B for you to visit",
                            "you can no longer visit A if you go into B",
                            "don't open B before picking up A",
                            "you cannot open B before you close the A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_grabbed(salmon)",
                            "b": "is_open(microwave)",
                            "c": "is_open(fridge)",
                            "d": "agent_at(bathroom)",
                            "h": "agent_at(sofa)",
                            "j": "agent_at(livingroom)",
                            "k": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "livingroom",
                            "C": "salmon",
                            "D": "kitchen",
                            "H": "fridge",
                            "J": "sofa",
                            "K": "microwave"
                        },
                        "predicate": {
                            "a": "is_grabbed(C)",
                            "b": "is_open(K)",
                            "c": "is_open(H)",
                            "d": "agent_at(A)",
                            "h": "agent_at(J)",
                            "j": "agent_at(B)",
                            "k": "agent_at(D)"
                        },
                        "unified_ltl": "& & & & W ! d k G i h F j G i d G ! j W ! c a W ! b ! c"
                    }
                }
            },
            "11_9": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i !is_open(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to go to B later if you have closed the A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "!is_open(fridge)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "!is_open(A)"
                        },
                        "unified_ltl": "G i b F a"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i !is_open(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "closing the A means you have to go to B in the future"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "!is_open(fridge)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "!is_open(A)"
                        },
                        "unified_ltl": "G i b F a"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "apple": "B",
                                "computer": "A"
                            },
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(A) is_grabbed(B)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "pick up B before turning on the A",
                            "go to B later if you have been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_switchedon(computer)",
                            "b": "is_grabbed(apple)",
                            "c": "agent_at(livingroom)",
                            "d": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom",
                            "C": "computer",
                            "D": "apple"
                        },
                        "predicate": {
                            "a": "is_switchedon(C)",
                            "b": "is_grabbed(D)",
                            "c": "agent_at(A)",
                            "d": "agent_at(B)"
                        },
                        "unified_ltl": "& W ! a b G i c F d"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "apple": "B",
                                "computer": "A"
                            },
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(A) is_grabbed(B)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "pick up B before turning on the A",
                            "go to A later if you have been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_switchedon(computer)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(livingroom)",
                            "d": "is_grabbed(apple)"
                        },
                        "object": {
                            "A": "computer",
                            "B": "bathroom",
                            "C": "apple",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "is_switchedon(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(D)",
                            "d": "is_grabbed(C)"
                        },
                        "unified_ltl": "& W ! a d G i c F b"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "computer": "A",
                                "lightswitch": "B",
                                "salmon": "C"
                            },
                            {
                                "bathroom": "A",
                                "fridge": "B"
                            },
                            {
                                "kitchen": "B",
                                "toilet": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i is_on(B,A) F is_grabbed(C)",
                            "G i !is_open(B) F agent_at(A)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "if you B on the A you will have to pick up C in the future",
                            "you have to go to A later if you have closed the B",
                            "you have to visit A after visiting B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "!is_open(fridge)",
                            "b": "agent_at(kitchen)",
                            "c": "agent_at(toilet)",
                            "d": "is_on(lightswitch,computer)",
                            "h": "is_grabbed(salmon)",
                            "j": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "lightswitch",
                            "B": "kitchen",
                            "C": "toilet",
                            "D": "bathroom",
                            "H": "salmon",
                            "J": "computer",
                            "K": "fridge"
                        },
                        "predicate": {
                            "a": "!is_open(K)",
                            "b": "agent_at(B)",
                            "c": "agent_at(C)",
                            "d": "is_on(A,J)",
                            "h": "is_grabbed(H)",
                            "j": "agent_at(D)"
                        },
                        "unified_ltl": "& & G i d F h G i a F j G i b F c"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "computer": "A",
                                "salmon": "B"
                            },
                            {
                                "bathroom": "A",
                                "fridge": "B"
                            },
                            {
                                "kitchen": "B",
                                "toilet": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i is_switchedon(A) F is_grabbed(B)",
                            "G i ! is_open(B) F agent_at(A)",
                            "B U A"
                        ],
                        "sym_utt": [
                            "if you switch on the A you will have to pick up B in the future",
                            "closing the B means you have to go to A in the future",
                            "go to A but only after B is visited"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)",
                            "b": "agent_at(bathroom)",
                            "c": "toilet",
                            "d": "is_grabbed(salmon)",
                            "h": "kitchen",
                            "j": "is_switchedon(computer)"
                        },
                        "object": {
                            "A": "toilet",
                            "B": "kitchen",
                            "C": "fridge",
                            "D": "computer",
                            "H": "bathroom",
                            "J": "salmon"
                        },
                        "predicate": {
                            "a": "is_open(C)",
                            "b": "agent_at(H)",
                            "c": "A",
                            "d": "is_grabbed(J)",
                            "h": "B",
                            "j": "is_switchedon(D)"
                        },
                        "unified_ltl": "& & G i j F d G i ! a F b h U c"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "computer": "A",
                                "salmon": "B"
                            },
                            {
                                "apple": "B",
                                "computer": "A"
                            },
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "kitchen": "A",
                                "toilet": "B"
                            }
                        ],
                        "sym_ltl": [
                            "G i is_switchedon(A) F is_grabbed(B)",
                            "W ! is_switchedon(A) is_grabbed(B)",
                            "G i agent_at(B) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "if you switch on the A you will have to pick up B in the future",
                            "pick up B before turning on the A",
                            "go to A later if you have been to B",
                            "you have to visit B after visiting A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(kitchen)",
                            "c": "is_switchedon(computer)",
                            "d": "agent_at(bathroom)",
                            "h": "agent_at(toilet)",
                            "j": "is_grabbed(salmon)",
                            "k": "is_grabbed(apple)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "toilet",
                            "C": "kitchen",
                            "D": "bathroom",
                            "H": "computer",
                            "J": "apple",
                            "K": "salmon"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(C)",
                            "c": "is_switchedon(H)",
                            "d": "agent_at(D)",
                            "h": "agent_at(B)",
                            "j": "is_grabbed(K)",
                            "k": "is_grabbed(J)"
                        },
                        "unified_ltl": "& & & G i c F j W ! c k G i a F d G i b F h"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "computer": "A",
                                "lightswitch": "C",
                                "salmon": "B"
                            },
                            {
                                "apple": "A",
                                "computer": "B"
                            },
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "B",
                                "toilet": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i is_on(C,A) F is_grabbed(B)",
                            "W ! is_switchedon(B) is_grabbed(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "B U A"
                        ],
                        "sym_utt": [
                            "if you C on the A you will have to pick up B in the future",
                            "pick up A before turning on the B",
                            "go to B later if you have been to A",
                            "go to A but only after B is visited"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "kitchen",
                            "b": "is_on(lightswitch,computer)",
                            "c": "is_grabbed(salmon)",
                            "d": "is_grabbed(apple)",
                            "h": "agent_at(bathroom)",
                            "j": "agent_at(livingroom)",
                            "k": "toilet",
                            "l": "is_switchedon(computer)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bathroom",
                            "C": "apple",
                            "D": "livingroom",
                            "H": "salmon",
                            "J": "lightswitch",
                            "K": "toilet",
                            "L": "computer"
                        },
                        "predicate": {
                            "a": "A",
                            "b": "is_on(J,L)",
                            "c": "is_grabbed(H)",
                            "d": "is_grabbed(C)",
                            "h": "agent_at(B)",
                            "j": "agent_at(D)",
                            "k": "K",
                            "l": "is_switchedon(L)"
                        },
                        "unified_ltl": "& & & G i b F c W ! l d G i j F h a U k"
                    }
                },
                "4_wrong": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "computer": "B",
                                "lightswitch": "C",
                                "salmon": "A"
                            },
                            {
                                "apple": "B",
                                "computer": "A"
                            },
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "kitchen": "A",
                                "toilet": "B"
                            }
                        ],
                        "sym_ltl": [
                            "G i is_on(C,B) F is_grabbed(A)",
                            "W ! is_switchedon(A) is_grabbed(B)",
                            "G i agent_at(B) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "if you C on the B you will have to pick up A in the future",
                            "pick up B before turning on the A",
                            "go to A later if you have been to B",
                            "you have to visit B after visiting A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_grabbed(apple)",
                            "b": "is_on(lightswitch,computer)",
                            "c": "agent_at(toilet)",
                            "d": "agent_at(livingroom)",
                            "h": "agent_at(bathroom)",
                            "j": "is_grabbed(salmon)",
                            "k": "is_switchedon(computer)",
                            "l": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "computer",
                            "B": "toilet",
                            "C": "lightswitch",
                            "D": "apple",
                            "H": "bathroom",
                            "J": "salmon",
                            "K": "livingroom",
                            "L": "kitchen"
                        },
                        "predicate": {
                            "a": "is_grabbed(D)",
                            "b": "is_on(C,A)",
                            "c": "agent_at(B)",
                            "d": "agent_at(K)",
                            "h": "agent_at(H)",
                            "j": "is_grabbed(J)",
                            "k": "is_switchedon(A)",
                            "l": "agent_at(L)"
                        },
                        "unified_ltl": "& & & G i b F j W ! k a G i d F h G i l F c"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "computer": "B",
                                "salmon": "A"
                            },
                            {
                                "apple": "B",
                                "computer": "A"
                            },
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A",
                                "fridge": "B"
                            },
                            {
                                "kitchen": "B",
                                "toilet": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i is_switchedon(B) F is_grabbed(A)",
                            "W ! is_switchedon(A) is_grabbed(B)",
                            "G i agent_at(B) F agent_at(A)",
                            "G i ! is_open(B) F agent_at(A)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "if you switch on the B you will have to pick up A in the future",
                            "pick up B before turning on the A",
                            "go to A later if you have been to B",
                            "you have to go to A later if you have closed the B",
                            "you have to visit A after visiting B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(kitchen)",
                            "c": "agent_at(livingroom)",
                            "d": "is_open(fridge)",
                            "h": "is_grabbed(salmon)",
                            "j": "is_switchedon(computer)",
                            "k": "agent_at(toilet)",
                            "l": "is_grabbed(apple)"
                        },
                        "object": {
                            "A": "salmon",
                            "B": "bathroom",
                            "C": "apple",
                            "D": "fridge",
                            "H": "kitchen",
                            "J": "toilet",
                            "K": "computer",
                            "L": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(H)",
                            "c": "agent_at(L)",
                            "d": "is_open(D)",
                            "h": "is_grabbed(A)",
                            "j": "is_switchedon(K)",
                            "k": "agent_at(J)",
                            "l": "is_grabbed(C)"
                        },
                        "unified_ltl": "& & & & G i j F h W ! j l G i c F a G i ! d F a G i b F k"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "computer": "A",
                                "salmon": "B"
                            },
                            {
                                "apple": "B",
                                "computer": "A"
                            },
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "B",
                                "fridge": "A"
                            },
                            {
                                "kitchen": "A",
                                "toilet": "B"
                            }
                        ],
                        "sym_ltl": [
                            "G i is_switchedon(A) F is_grabbed(B)",
                            "W ! is_switchedon(A) is_grabbed(B)",
                            "G i agent_at(B) F agent_at(A)",
                            "G i ! is_open(A) F agent_at(B)",
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "if you switch on the A you will have to pick up B in the future",
                            "pick up B before turning on the A",
                            "go to A later if you have been to B",
                            "closing the A means you have to go to B in the future",
                            "go to B but only after A is visited"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_switchedon(computer)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bathroom)",
                            "d": "is_open(fridge)",
                            "h": "is_grabbed(salmon)",
                            "j": "agent_at(toilet)",
                            "k": "agent_at(kitchen)",
                            "l": "is_grabbed(apple)"
                        },
                        "object": {
                            "A": "computer",
                            "B": "fridge",
                            "C": "apple",
                            "D": "salmon",
                            "H": "toilet",
                            "J": "kitchen",
                            "K": "bathroom",
                            "L": "livingroom"
                        },
                        "predicate": {
                            "a": "is_switchedon(A)",
                            "b": "agent_at(L)",
                            "c": "agent_at(K)",
                            "d": "is_open(B)",
                            "h": "is_grabbed(D)",
                            "j": "agent_at(H)",
                            "k": "agent_at(J)",
                            "l": "is_grabbed(C)"
                        },
                        "unified_ltl": "& & & & G i a F h W ! a l G i b F c G i ! d F c W ! j k"
                    }
                }
            },
            "3_3": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "sofa": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G ! agent_at(A)"
                        ],
                        "sym_utt": [
                            "always avoid A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(sofa)"
                        },
                        "object": {
                            "A": "sofa"
                        },
                        "predicate": {
                            "a": "agent_at(A)"
                        },
                        "unified_ltl": "G ! a"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "sofa": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G ! agent_at(A)"
                        ],
                        "sym_utt": [
                            "never go near A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(sofa)"
                        },
                        "object": {
                            "A": "sofa"
                        },
                        "predicate": {
                            "a": "agent_at(A)"
                        },
                        "unified_ltl": "G ! a"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "C",
                                "radio": "A",
                                "salmon": "B"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(A) is_in(B,C)",
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "don't switch on the A if you haven't put B in the C",
                            "if you open A you have to close the A in the future"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)",
                            "b": "is_switchedon(radio)",
                            "c": "is_in(salmon,fridge)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "salmon",
                            "C": "radio"
                        },
                        "predicate": {
                            "a": "is_open(A)",
                            "b": "is_switchedon(C)",
                            "c": "is_in(B,A)"
                        },
                        "unified_ltl": "& W ! b c G i a F ! a"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "B",
                                "radio": "A",
                                "salmon": "C"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(A) is_in(C,B)",
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "you can switch on the A only after you put C in the B",
                            "don't forget to close the A if you have opened it"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(salmon,fridge)",
                            "b": "is_switchedon(radio)",
                            "c": "is_open(fridge)"
                        },
                        "object": {
                            "A": "radio",
                            "B": "fridge",
                            "C": "salmon"
                        },
                        "predicate": {
                            "a": "is_in(C,B)",
                            "b": "is_switchedon(A)",
                            "c": "is_open(B)"
                        },
                        "unified_ltl": "& W ! b a G i c F ! c"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F is_open(A)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "you can open A at most twice",
                            "don't enter B if you haven't been to A",
                            "if you open A you have to close the A in the future"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bedroom",
                            "C": "fridge"
                        },
                        "predicate": {
                            "a": "is_open(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& & ! F & a U a & ! a U ! a F & a U a & ! a U ! a F a W ! c b G i a F ! a"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "A"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F is_open(A)",
                            "W ! agent_at(A) agent_at(B)",
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "you can open A at most twice",
                            "don't enter A if you haven't been to B",
                            "don't forget to close the A if you have opened it"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bedroom)",
                            "c": "is_open(fridge)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "fridge",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "is_open(B)"
                        },
                        "unified_ltl": "& & ! F & c U c & ! c U ! c F & c U c & ! c U ! c F c W ! b a G i c F ! c"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "B",
                                "radio": "A",
                                "salmon": "C"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "sofa": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(A) is_in(C,B)",
                            "W ! agent_at(A) agent_at(B)",
                            "G i is_open(A) F ! is_open(A)",
                            "G ! agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't switch on the A if you haven't put C in the B",
                            "don't enter A if you haven't been to B",
                            "if you open A you have to close the A in the future",
                            "always avoid A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "is_switchedon(radio)",
                            "c": "agent_at(bedroom)",
                            "d": "is_open(fridge)",
                            "h": "agent_at(sofa)",
                            "j": "is_in(salmon,fridge)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "radio",
                            "C": "bedroom",
                            "D": "fridge",
                            "H": "sofa",
                            "J": "salmon"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "is_switchedon(B)",
                            "c": "agent_at(C)",
                            "d": "is_open(D)",
                            "h": "agent_at(H)",
                            "j": "is_in(J,D)"
                        },
                        "unified_ltl": "& & & W ! b j W ! c a G i d F ! d G ! h"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "C",
                                "radio": "A",
                                "salmon": "B"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "sofa": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(A) is_in(B,C)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i is_open(A) F ! is_open(A)",
                            "G ! agent_at(A)"
                        ],
                        "sym_utt": [
                            "you can switch on the A only after you put B in the C",
                            "don't enter B if you haven't been to A",
                            "don't forget to close the A if you have opened it",
                            "never go near A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(salmon,fridge)",
                            "b": "agent_at(bedroom)",
                            "c": "is_switchedon(radio)",
                            "d": "agent_at(sofa)",
                            "h": "is_open(fridge)",
                            "j": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "sofa",
                            "C": "livingroom",
                            "D": "salmon",
                            "H": "radio",
                            "J": "fridge"
                        },
                        "predicate": {
                            "a": "is_in(D,J)",
                            "b": "agent_at(A)",
                            "c": "is_switchedon(H)",
                            "d": "agent_at(B)",
                            "h": "is_open(J)",
                            "j": "agent_at(C)"
                        },
                        "unified_ltl": "& & & W ! c a W ! b j G i h F ! h G ! d"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "B",
                                "radio": "C",
                                "salmon": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "sofa": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(C) is_in(A,B)",
                            "! F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F is_open(A)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i is_open(A) F ! is_open(A)",
                            "G ! agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't switch on the C if you haven't put A in the B",
                            "you can open A at most twice",
                            "don't enter B if you haven't been to A",
                            "if you open A you have to close the A in the future",
                            "always avoid A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "is_switchedon(radio)",
                            "c": "is_in(salmon,fridge)",
                            "d": "agent_at(bedroom)",
                            "h": "agent_at(sofa)",
                            "j": "is_open(fridge)"
                        },
                        "object": {
                            "A": "salmon",
                            "B": "fridge",
                            "C": "radio",
                            "D": "bedroom",
                            "H": "sofa",
                            "J": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(J)",
                            "b": "is_switchedon(C)",
                            "c": "is_in(A,B)",
                            "d": "agent_at(D)",
                            "h": "agent_at(H)",
                            "j": "is_open(B)"
                        },
                        "unified_ltl": "& & & & W ! b c ! F & j U j & ! j U ! j F & j U j & ! j U ! j F j W ! d a G i j F ! j G ! h"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "B",
                                "radio": "A",
                                "salmon": "C"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "sofa": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(A) is_in(C,B)",
                            "! F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F is_open(A)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i is_open(A) F ! is_open(A)",
                            "G ! agent_at(A)"
                        ],
                        "sym_utt": [
                            "you can switch on the A only after you put C in the B",
                            "you can open A at most twice",
                            "don't enter B if you haven't been to A",
                            "don't forget to close the A if you have opened it",
                            "never go near A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_switchedon(radio)",
                            "b": "agent_at(sofa)",
                            "c": "is_open(fridge)",
                            "d": "agent_at(bedroom)",
                            "h": "agent_at(livingroom)",
                            "j": "is_in(salmon,fridge)"
                        },
                        "object": {
                            "A": "radio",
                            "B": "sofa",
                            "C": "salmon",
                            "D": "livingroom",
                            "H": "bedroom",
                            "J": "fridge"
                        },
                        "predicate": {
                            "a": "is_switchedon(A)",
                            "b": "agent_at(B)",
                            "c": "is_open(J)",
                            "d": "agent_at(H)",
                            "h": "agent_at(D)",
                            "j": "is_in(C,J)"
                        },
                        "unified_ltl": "& & & & W ! a j ! F & c U c & ! c U ! c F & c U c & ! c U ! c F c W ! d h G i c F ! c G ! b"
                    }
                }
            },
            "74_1": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "pillow": "A",
                                "sofa": "C"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_on(A,C) agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't put A on C if you haven't been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_on(pillow,sofa)",
                            "b": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "pillow",
                            "B": "bathroom",
                            "C": "sofa"
                        },
                        "predicate": {
                            "a": "is_on(A,C)",
                            "b": "agent_at(B)"
                        },
                        "unified_ltl": "W ! a b"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "pillow": "C",
                                "sofa": "B"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(A) F is_on(C,B)"
                        ],
                        "sym_utt": [
                            "only put C on B if you have already been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "is_on(pillow,sofa)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "sofa",
                            "C": "pillow"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "is_on(C,B)"
                        },
                        "unified_ltl": "G i a F b"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "C",
                                "fridge": "A",
                                "salmon": "B"
                            },
                            {
                                "bed": "C",
                                "fridge": "A",
                                "pie": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(C) is_in(B,A)",
                            "G i agent_at(C) F is_in(B,A)"
                        ],
                        "sym_utt": [
                            "put B in A before going to C",
                            "you have to put B in A later if you have been to C"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bed)",
                            "b": "agent_at(bedroom)",
                            "c": "is_in(salmon,fridge)",
                            "d": "is_in(pie,fridge)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "pie",
                            "C": "salmon",
                            "D": "bedroom",
                            "H": "bed"
                        },
                        "predicate": {
                            "a": "agent_at(H)",
                            "b": "agent_at(D)",
                            "c": "is_in(C,A)",
                            "d": "is_in(B,A)"
                        },
                        "unified_ltl": "& W ! b c G i a F d"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "B",
                                "fridge": "C",
                                "salmon": "A"
                            },
                            {
                                "bed": "C",
                                "fridge": "B",
                                "pie": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) is_in(A,C)",
                            "G i agent_at(C) F is_in(A,B)"
                        ],
                        "sym_utt": [
                            "only go to B after A is in the C",
                            "you have to put A in B later if you have been to C"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "is_in(pie,fridge)",
                            "c": "agent_at(bed)",
                            "d": "is_in(salmon,fridge)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "bed",
                            "C": "salmon",
                            "D": "pie",
                            "H": "fridge"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "is_in(D,H)",
                            "c": "agent_at(B)",
                            "d": "is_in(C,H)"
                        },
                        "unified_ltl": "& W ! a d G i c F b"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "B",
                                "fridge": "A",
                                "salmon": "C"
                            },
                            {
                                "bathroom": "B",
                                "pillow": "A",
                                "sofa": "C"
                            },
                            {
                                "livingroom": "A",
                                "sofa": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) is_in(C,A)",
                            "W ! is_on(A,C) agent_at(B)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "put C in A before going to B",
                            "don't put A on C if you haven't been to B",
                            "you have to go to A later if you have been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "is_in(salmon,fridge)",
                            "c": "is_on(pillow,sofa)",
                            "d": "agent_at(livingroom)",
                            "h": "agent_at(bedroom)",
                            "j": "agent_at(sofa)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "salmon",
                            "C": "livingroom",
                            "D": "sofa",
                            "H": "pillow",
                            "J": "bedroom",
                            "K": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(K)",
                            "b": "is_in(B,A)",
                            "c": "is_on(H,D)",
                            "d": "agent_at(C)",
                            "h": "agent_at(J)",
                            "j": "agent_at(D)"
                        },
                        "unified_ltl": "& & W ! h b W ! c a G i j F d"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "B",
                                "fridge": "A",
                                "salmon": "C"
                            },
                            {
                                "bathroom": "B",
                                "pillow": "C",
                                "sofa": "A"
                            },
                            {
                                "livingroom": "B",
                                "sofa": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) is_in(C,A)",
                            "G i agent_at(B) F is_on(C,A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "only go to B after C is in the A",
                            "only put C on A if you have already been to B",
                            "go to A means you have to visit B in the future"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(salmon,fridge)",
                            "b": "agent_at(bedroom)",
                            "c": "is_on(pillow,sofa)",
                            "d": "agent_at(livingroom)",
                            "h": "agent_at(sofa)",
                            "j": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "pillow",
                            "C": "livingroom",
                            "D": "fridge",
                            "H": "salmon",
                            "J": "bedroom",
                            "K": "sofa"
                        },
                        "predicate": {
                            "a": "is_in(H,D)",
                            "b": "agent_at(J)",
                            "c": "is_on(B,K)",
                            "d": "agent_at(C)",
                            "h": "agent_at(K)",
                            "j": "agent_at(A)"
                        },
                        "unified_ltl": "& & W ! b a G i j F c G i h F d"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "A",
                                "fridge": "C",
                                "salmon": "B"
                            },
                            {
                                "bed": "B",
                                "fridge": "C",
                                "pie": "A"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "livingroom": "A",
                                "sofa": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) is_in(B,C)",
                            "G i agent_at(B) F is_in(A,C)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "put B in C before going to A",
                            "you have to put A in C later if you have been to B",
                            "you can visit A for three times at most",
                            "you have to go to A later if you have been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bed)",
                            "b": "agent_at(sofa)",
                            "c": "agent_at(livingroom)",
                            "d": "is_in(pie,fridge)",
                            "h": "agent_at(bathroom)",
                            "j": "is_in(salmon,fridge)",
                            "k": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "salmon",
                            "B": "livingroom",
                            "C": "pie",
                            "D": "fridge",
                            "H": "bathroom",
                            "J": "sofa",
                            "K": "bedroom",
                            "L": "bed"
                        },
                        "predicate": {
                            "a": "agent_at(L)",
                            "b": "agent_at(J)",
                            "c": "agent_at(B)",
                            "d": "is_in(C,D)",
                            "h": "agent_at(H)",
                            "j": "is_in(A,D)",
                            "k": "agent_at(K)"
                        },
                        "unified_ltl": "& & & W ! k j G i a F d ! F & h U h & ! h U ! h F & h U h & ! h U ! h F & h U h & ! h U ! h F h G i b F c"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "B",
                                "fridge": "C",
                                "salmon": "A"
                            },
                            {
                                "bed": "A",
                                "fridge": "C",
                                "pie": "B"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "livingroom": "A",
                                "sofa": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) is_in(A,C)",
                            "G i agent_at(A) F is_in(B,C)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "only go to B after A is in the C",
                            "you have to put B in C later if you have been to A",
                            "you cannot visit A for more than three times",
                            "go to B means you have to visit A in the future"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "is_in(salmon,fridge)",
                            "c": "is_in(pie,fridge)",
                            "d": "agent_at(livingroom)",
                            "h": "agent_at(bed)",
                            "j": "agent_at(sofa)",
                            "k": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "salmon",
                            "B": "bedroom",
                            "C": "bed",
                            "D": "bathroom",
                            "H": "livingroom",
                            "J": "sofa",
                            "K": "pie",
                            "L": "fridge"
                        },
                        "predicate": {
                            "a": "agent_at(D)",
                            "b": "is_in(A,L)",
                            "c": "is_in(K,L)",
                            "d": "agent_at(H)",
                            "h": "agent_at(C)",
                            "j": "agent_at(J)",
                            "k": "agent_at(B)"
                        },
                        "unified_ltl": "& & & W ! k b G i h F c ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a G i j F d"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "B",
                                "fridge": "C",
                                "salmon": "A"
                            },
                            {
                                "bed": "B",
                                "fridge": "C",
                                "pie": "A"
                            },
                            {
                                "bathroom": "A",
                                "pillow": "C",
                                "sofa": "B"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "livingroom": "B",
                                "sofa": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) is_in(A,C)",
                            "G i agent_at(B) F is_in(A,C)",
                            "W ! is_on(C,B) agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "put A in C before going to B",
                            "you have to put A in C later if you have been to B",
                            "don't put C on B if you haven't been to A",
                            "you can visit A for three times at most",
                            "you have to go to B later if you have been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(bed)",
                            "c": "is_on(pillow,sofa)",
                            "d": "is_in(pie,fridge)",
                            "h": "agent_at(bedroom)",
                            "j": "agent_at(livingroom)",
                            "k": "is_in(salmon,fridge)",
                            "l": "agent_at(sofa)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "sofa",
                            "C": "fridge",
                            "D": "pillow",
                            "H": "bedroom",
                            "J": "livingroom",
                            "K": "salmon",
                            "L": "pie",
                            "N": "bed"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(N)",
                            "c": "is_on(D,B)",
                            "d": "is_in(L,C)",
                            "h": "agent_at(H)",
                            "j": "agent_at(J)",
                            "k": "is_in(K,C)",
                            "l": "agent_at(B)"
                        },
                        "unified_ltl": "& & & & W ! h k G i b F d W ! c a ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a G i l F j"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "B",
                                "fridge": "A",
                                "salmon": "C"
                            },
                            {
                                "bed": "C",
                                "fridge": "A",
                                "pie": "B"
                            },
                            {
                                "bathroom": "C",
                                "pillow": "B",
                                "sofa": "A"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "livingroom": "A",
                                "sofa": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) is_in(C,A)",
                            "G i agent_at(C) F is_in(B,A)",
                            "G i agent_at(C) F is_on(B,A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "only go to B after C is in the A",
                            "you have to put B in A later if you have been to C",
                            "only put B on A if you have already been to C",
                            "you cannot visit A for more than three times",
                            "go to B means you have to visit A in the future"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(salmon,fridge)",
                            "b": "agent_at(sofa)",
                            "c": "agent_at(livingroom)",
                            "d": "is_on(pillow,sofa)",
                            "h": "agent_at(bed)",
                            "j": "agent_at(bathroom)",
                            "k": "agent_at(bedroom)",
                            "l": "is_in(pie,fridge)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "bedroom",
                            "C": "pillow",
                            "D": "bed",
                            "H": "sofa",
                            "J": "bathroom",
                            "K": "livingroom",
                            "L": "salmon",
                            "N": "pie"
                        },
                        "predicate": {
                            "a": "is_in(L,A)",
                            "b": "agent_at(H)",
                            "c": "agent_at(K)",
                            "d": "is_on(C,H)",
                            "h": "agent_at(D)",
                            "j": "agent_at(J)",
                            "k": "agent_at(B)",
                            "l": "is_in(N,A)"
                        },
                        "unified_ltl": "& & & & W ! k a G i h F l G i j F d ! F & j U j & ! j U ! j F & j U j & ! j U ! j F & j U j & ! j U ! j F j G i b F c"
                    }
                },
                "5_wrong": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "C",
                                "fridge": "A",
                                "salmon": "B"
                            },
                            {
                                "bed": "B",
                                "fridge": "A",
                                "pie": "C"
                            },
                            {
                                "bathroom": "B",
                                "pillow": "C",
                                "sofa": "A"
                            },
                            {
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "B",
                                "pillow": "C",
                                "sofa": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(C) is_in(B,A)",
                            "G i agent_at(B) X is_in(C,A)",
                            "W ! is_on(C,A) agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i is_on(C,A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "put B in A before going to C",
                            "put C in A later if you have been to B",
                            "don't put C on A afterward if you haven't been to B",
                            "you can visit A for three times at most",
                            "you have to go to B later if you have put C on the A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(salmon,fridge)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(bed)",
                            "h": "is_in(pie,fridge)",
                            "j": "is_on(pillow,sofa)",
                            "k": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "salmon",
                            "C": "pillow",
                            "D": "kitchen",
                            "H": "fridge",
                            "J": "bedroom",
                            "K": "pie",
                            "L": "bed",
                            "N": "sofa"
                        },
                        "predicate": {
                            "a": "is_in(B,H)",
                            "b": "agent_at(J)",
                            "c": "agent_at(A)",
                            "d": "agent_at(L)",
                            "h": "is_in(K,H)",
                            "j": "is_on(C,N)",
                            "k": "agent_at(D)"
                        },
                        "unified_ltl": "& & & & W ! b a G i d X h W ! j c ! F & k U k & ! k U ! k F & k U k & ! k U ! k F & k U k & ! k U ! k F k G i j F c"
                    }
                }
            }
        },
        "1": {
            "0_0": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "apple": "C",
                                "fridge": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) is_in(C,A)"
                        ],
                        "sym_utt": [
                            "put C in the A before entering B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "is_in(apple,fridge)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "livingroom",
                            "C": "apple"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "is_in(C,A)"
                        },
                        "unified_ltl": "W ! a b"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "apple": "A",
                                "fridge": "B",
                                "livingroom": "C"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(C) is_in(A,B)"
                        ],
                        "sym_utt": [
                            "you cannot enter C if you didn't put an A in the B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(apple,fridge)",
                            "b": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "apple",
                            "B": "fridge",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "is_in(A,B)",
                            "b": "agent_at(C)"
                        },
                        "unified_ltl": "W ! b a"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "A"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F is_open(A)",
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "you can only open A at most three times",
                            "you have to close A if you have opened A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)"
                        },
                        "object": {
                            "A": "fridge"
                        },
                        "predicate": {
                            "a": "is_open(A)"
                        },
                        "unified_ltl": "& ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a G i a F ! a"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "A"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F is_open(A)",
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "you can only open A at most three times",
                            "you have to close A if you have opened A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)"
                        },
                        "object": {
                            "A": "fridge"
                        },
                        "predicate": {
                            "a": "is_open(A)"
                        },
                        "unified_ltl": "& ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a G i a F ! a"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "apple": "A",
                                "fridge": "B",
                                "livingroom": "C"
                            },
                            {
                                "apple": "A",
                                "cutlets": "B"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(C) is_in(A,B)",
                            "W ! is_grabbed(A) is_grabbed(B)",
                            "! F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F is_open(A)"
                        ],
                        "sym_utt": [
                            "put A in the B before entering C",
                            "grab B before you grab A",
                            "you can only open A at most three times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(apple,fridge)",
                            "b": "agent_at(livingroom)",
                            "c": "is_grabbed(apple)",
                            "d": "is_open(fridge)",
                            "h": "is_grabbed(cutlets)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "apple",
                            "C": "cutlets",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "is_in(B,A)",
                            "b": "agent_at(D)",
                            "c": "is_grabbed(B)",
                            "d": "is_open(A)",
                            "h": "is_grabbed(C)"
                        },
                        "unified_ltl": "& & W ! b a W ! c h ! F & d U d & ! d U ! d F & d U d & ! d U ! d F & d U d & ! d U ! d F d"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "apple": "A",
                                "fridge": "C",
                                "livingroom": "B"
                            },
                            {
                                "apple": "A",
                                "cutlets": "B"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_in(A,C) agent_at(B)",
                            "W ! is_grabbed(A) is_grabbed(B)",
                            "! F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F is_open(A)"
                        ],
                        "sym_utt": [
                            "you cannot enter B if you didn't put an A in the C",
                            "don't grab A if you haven't grabbed B",
                            "you can only open A at most three times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(apple,fridge)",
                            "b": "agent_at(livingroom)",
                            "c": "is_grabbed(apple)",
                            "d": "is_grabbed(cutlets)",
                            "h": "is_open(fridge)"
                        },
                        "object": {
                            "A": "apple",
                            "B": "livingroom",
                            "C": "cutlets",
                            "D": "fridge"
                        },
                        "predicate": {
                            "a": "is_in(A,D)",
                            "b": "agent_at(B)",
                            "c": "is_grabbed(A)",
                            "d": "is_grabbed(C)",
                            "h": "is_open(D)"
                        },
                        "unified_ltl": "& & W ! a b W ! c d ! F & h U h & ! h U ! h F & h U h & ! h U ! h F & h U h & ! h U ! h F h"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "B",
                                "livingroom": "A"
                            },
                            {
                                "apple": "B",
                                "fridge": "C",
                                "livingroom": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_open(B) agent_at(A)",
                            "W ! agent_at(A) is_in(B,C)",
                            "! F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F is_open(A)",
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "you have to go to A before open B",
                            "put B in the C before entering A",
                            "you can only open A at most three times",
                            "you have to close A if you have opened A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)",
                            "b": "is_in(apple,fridge)",
                            "c": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "apple",
                            "C": "fridge"
                        },
                        "predicate": {
                            "a": "is_open(C)",
                            "b": "is_in(B,C)",
                            "c": "agent_at(A)"
                        },
                        "unified_ltl": "& & & W ! a c W ! c b ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a G i a F ! a"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "A",
                                "livingroom": "B"
                            },
                            {
                                "apple": "A",
                                "fridge": "B",
                                "livingroom": "C"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) is_open(A)",
                            "W ! is_in(A,B) agent_at(C)",
                            "! F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F is_open(A)",
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "don't go to B before A is open",
                            "you cannot enter C if you didn't put an A in the B",
                            "you can only open A at most three times",
                            "you have to close A if you have opened A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(apple,fridge)",
                            "b": "is_open(fridge)",
                            "c": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "apple",
                            "B": "fridge",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "is_in(A,B)",
                            "b": "is_open(B)",
                            "c": "agent_at(C)"
                        },
                        "unified_ltl": "& & & W ! c b W ! a c ! F & b U b & ! b U ! b F & b U b & ! b U ! b F & b U b & ! b U ! b F b G i b F ! b"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "A",
                                "livingroom": "B"
                            },
                            {
                                "apple": "B",
                                "fridge": "A",
                                "livingroom": "C"
                            },
                            {
                                "apple": "A",
                                "cutlets": "B"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_open(A) agent_at(B)",
                            "W ! agent_at(C) is_in(B,A)",
                            "W ! is_grabbed(A) is_grabbed(B)",
                            "! F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F is_open(A)",
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "you have to go to B before open A",
                            "put B in the A before entering C",
                            "grab B before you grab A",
                            "you can only open A at most three times",
                            "you have to close A if you have opened A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_grabbed(apple)",
                            "b": "is_open(fridge)",
                            "c": "agent_at(livingroom)",
                            "d": "is_in(apple,fridge)",
                            "h": "is_grabbed(cutlets)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "apple",
                            "C": "livingroom",
                            "D": "cutlets"
                        },
                        "predicate": {
                            "a": "is_grabbed(B)",
                            "b": "is_open(A)",
                            "c": "agent_at(C)",
                            "d": "is_in(B,A)",
                            "h": "is_grabbed(D)"
                        },
                        "unified_ltl": "& & & & W ! b c W ! c d W ! a h ! F & b U b & ! b U ! b F & b U b & ! b U ! b F & b U b & ! b U ! b F b G i b F ! b"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "A",
                                "livingroom": "B"
                            },
                            {
                                "apple": "B",
                                "fridge": "A",
                                "livingroom": "C"
                            },
                            {
                                "apple": "B",
                                "cutlets": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) is_open(A)",
                            "W ! is_in(B,A) agent_at(C)",
                            "W ! is_grabbed(B) is_grabbed(A)",
                            "! F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F & is_open(A) U is_open(A) & ! is_open(A) U ! is_open(A) F is_open(A)",
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "don't go to B before A is open",
                            "you cannot enter C if you didn't put an B in the A",
                            "don't grab B if you haven't grabbed A",
                            "you can only open A at most three times",
                            "you have to close A if you have opened A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(apple,fridge)",
                            "b": "agent_at(livingroom)",
                            "c": "is_grabbed(apple)",
                            "d": "is_grabbed(cutlets)",
                            "h": "is_open(fridge)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "cutlets",
                            "C": "apple",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "is_in(C,A)",
                            "b": "agent_at(D)",
                            "c": "is_grabbed(C)",
                            "d": "is_grabbed(B)",
                            "h": "is_open(A)"
                        },
                        "unified_ltl": "& & & & W ! b h W ! a b W ! c d ! F & h U h & ! h U ! h F & h U h & ! h U ! h F & h U h & ! h U ! h F h G i h F ! h"
                    }
                }
            },
            "105_2": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "C",
                                "chicken": "B",
                                "microwave": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(C) is_in(B,A)"
                        ],
                        "sym_utt": [
                            "you have to put B into A before entering C"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "is_in(chicken,microwave)"
                        },
                        "object": {
                            "A": "microwave",
                            "B": "chicken",
                            "C": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "is_in(B,A)"
                        },
                        "unified_ltl": "W ! a b"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "A",
                                "chicken": "B",
                                "microwave": "C"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) is_in(B,C)"
                        ],
                        "sym_utt": [
                            "you have to put B into C before entering A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "is_in(chicken,microwave)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "chicken",
                            "C": "microwave"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "is_in(B,C)"
                        },
                        "unified_ltl": "W ! a b"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) G ! agent_at(B)"
                        ],
                        "sym_utt": [
                            "you can visit A at most two times",
                            "never go to B if you have been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "livingroom",
                            "C": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& ! F & a U a & ! a U ! a F a G i c G ! b"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) G ! agent_at(B)"
                        ],
                        "sym_utt": [
                            "never visit A more than two times",
                            "don't go to B afterward if you visit A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "livingroom",
                            "C": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(C)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& ! F & a U a & ! a U ! a F & a U a & ! a U ! a F a G i c G ! b"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G ! is_open(A)",
                            "G i agent_at(B) G ! agent_at(A)"
                        ],
                        "sym_utt": [
                            "you can visit A at most two times",
                            "never open A",
                            "never go to A if you have been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(bathroom)",
                            "d": "is_open(fridge)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bedroom",
                            "C": "fridge",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(D)",
                            "d": "is_open(C)"
                        },
                        "unified_ltl": "& & ! F & c U c & ! c U ! c F c G ! d G i a G ! b"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G ! is_open(A)",
                            "G i agent_at(A) G ! agent_at(B)"
                        ],
                        "sym_utt": [
                            "never visit A more than two times",
                            "don't open A",
                            "don't go to B afterward if you visit A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(bedroom)",
                            "c": "is_open(fridge)",
                            "d": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom",
                            "C": "bedroom",
                            "D": "fridge"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(C)",
                            "c": "is_open(D)",
                            "d": "agent_at(A)"
                        },
                        "unified_ltl": "& & ! F & a U a & ! a U ! a F & a U a & ! a U ! a F a G ! c G i d G ! b"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "A",
                                "microwave": "B"
                            },
                            {
                                "bedroom": "B",
                                "chicken": "A",
                                "microwave": "C"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) ! is_open(B)",
                            "W ! agent_at(B) is_in(A,C)",
                            "G ! is_open(A)",
                            "G i agent_at(A) G ! agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't enter A if you haven't close the B",
                            "you have to put A into C before entering B",
                            "never open A",
                            "never go to B if you have been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "is_open(fridge)",
                            "c": "is_open(microwave)",
                            "d": "is_in(chicken,microwave)",
                            "h": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "chicken",
                            "B": "livingroom",
                            "C": "bedroom",
                            "D": "microwave",
                            "H": "fridge"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "is_open(H)",
                            "c": "is_open(D)",
                            "d": "is_in(A,D)",
                            "h": "agent_at(B)"
                        },
                        "unified_ltl": "& & & W ! a ! c W ! a d G ! b G i h G ! a"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "A",
                                "microwave": "B"
                            },
                            {
                                "bedroom": "A",
                                "chicken": "B",
                                "microwave": "C"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i is_open(B) G ! agent_at(A)",
                            "W ! agent_at(A) is_in(B,C)",
                            "G ! is_open(A)",
                            "G i agent_at(A) G ! agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't go to A if the B is open",
                            "you have to put B into C before entering A",
                            "don't open A",
                            "don't go to B afterward if you visit A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(chicken,microwave)",
                            "b": "is_open(microwave)",
                            "c": "agent_at(bedroom)",
                            "d": "is_open(fridge)",
                            "h": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "chicken",
                            "C": "microwave",
                            "D": "fridge",
                            "H": "livingroom"
                        },
                        "predicate": {
                            "a": "is_in(B,C)",
                            "b": "is_open(C)",
                            "c": "agent_at(A)",
                            "d": "is_open(D)",
                            "h": "agent_at(H)"
                        },
                        "unified_ltl": "& & & G i b G ! c W ! c a G ! d G i h G ! c"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "A",
                                "microwave": "B"
                            },
                            {
                                "bedroom": "A",
                                "chicken": "B",
                                "microwave": "C"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) ! is_open(B)",
                            "W ! agent_at(A) is_in(B,C)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G ! is_open(A)",
                            "G i agent_at(B) G ! agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't enter A if you haven't close the B",
                            "you have to put B into C before entering A",
                            "you can visit A at most two times",
                            "never open A",
                            "never go to A if you have been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bathroom)",
                            "c": "is_open(microwave)",
                            "d": "agent_at(bedroom)",
                            "h": "is_open(fridge)",
                            "j": "is_in(chicken,microwave)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "bathroom",
                            "C": "livingroom",
                            "D": "chicken",
                            "H": "bedroom",
                            "J": "microwave"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(B)",
                            "c": "is_open(J)",
                            "d": "agent_at(H)",
                            "h": "is_open(A)",
                            "j": "is_in(D,J)"
                        },
                        "unified_ltl": "& & & & W ! d ! c W ! d j ! F & b U b & ! b U ! b F & b U b & ! b U ! b F b G ! h G i a G ! d"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "B",
                                "microwave": "A"
                            },
                            {
                                "bedroom": "C",
                                "chicken": "B",
                                "microwave": "A"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i is_open(A) G ! agent_at(B)",
                            "W ! agent_at(C) is_in(B,A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G ! is_open(A)",
                            "G i agent_at(A) G ! agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't go to B if the A is open",
                            "you have to put B into A before entering C",
                            "never visit A more than two times",
                            "don't open A",
                            "don't go to B afterward if you visit A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bedroom)",
                            "c": "is_open(fridge)",
                            "d": "is_in(chicken,microwave)",
                            "h": "agent_at(bathroom)",
                            "j": "is_open(microwave)"
                        },
                        "object": {
                            "A": "microwave",
                            "B": "bathroom",
                            "C": "chicken",
                            "D": "livingroom",
                            "H": "bedroom",
                            "J": "fridge"
                        },
                        "predicate": {
                            "a": "agent_at(D)",
                            "b": "agent_at(H)",
                            "c": "is_open(J)",
                            "d": "is_in(C,A)",
                            "h": "agent_at(B)",
                            "j": "is_open(A)"
                        },
                        "unified_ltl": "& & & & G i j G ! b W ! b d ! F & h U h & ! h U ! h F & h U h & ! h U ! h F h G ! c G i a G ! b"
                    }
                }
            },
            "36_1": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "A",
                                "window": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_open(B) is_open(A)"
                        ],
                        "sym_utt": [
                            "don't open B before you open A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)",
                            "b": "is_open(window)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "window"
                        },
                        "predicate": {
                            "a": "is_open(A)",
                            "b": "is_open(B)"
                        },
                        "unified_ltl": "W ! b a"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "B",
                                "window": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_open(A) is_open(B)"
                        ],
                        "sym_utt": [
                            "never open A before you open B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(window)",
                            "b": "is_open(fridge)"
                        },
                        "object": {
                            "A": "window",
                            "B": "fridge"
                        },
                        "predicate": {
                            "a": "is_open(A)",
                            "b": "is_open(B)"
                        },
                        "unified_ltl": "W ! a b"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to go to A before entering B",
                            "you can go to A three times at most"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)"
                        },
                        "unified_ltl": "& W ! b a ! F & b U b & ! b U ! b F & b U b & ! b U ! b F & b U b & ! b U ! b F b"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't enter A if you haven't visited B",
                            "you can go to A three times at most"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "& W ! b a ! F & b U b & ! b U ! b F & b U b & ! b U ! b F & b U b & ! b U ! b F b"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "G i is_open(A) F ! is_open(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to go to A before entering B",
                            "if you open A, you must close it later",
                            "you can go to A three times at most"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bathroom)",
                            "c": "is_open(fridge)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "fridge",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "is_open(B)"
                        },
                        "unified_ltl": "& & W ! a b G i c F ! c ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "G i is_open(A) F ! is_open(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't enter B if you haven't visited A",
                            "remember to close the A if you open it",
                            "you can go to A three times at most"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "is_open(fridge)",
                            "c": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "fridge",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "is_open(B)",
                            "c": "agent_at(C)"
                        },
                        "unified_ltl": "& & W ! c a G i b F ! b ! F & c U c & ! c U ! c F & c U c & ! c U ! c F & c U c & ! c U ! c F c"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "C",
                                "chicken": "A",
                                "fridge": "B"
                            },
                            {
                                "fridge": "B",
                                "window": "A"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(C) is_in(A,B)",
                            "W ! is_open(A) is_open(B)",
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "you have to go to A before entering B",
                            "put A into B before you enter C",
                            "don't open A before you open B",
                            "if you open A, you must close it later"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bathroom)",
                            "c": "is_open(window)",
                            "d": "is_in(chicken,fridge)",
                            "h": "is_open(fridge)"
                        },
                        "object": {
                            "A": "window",
                            "B": "livingroom",
                            "C": "chicken",
                            "D": "fridge",
                            "H": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(H)",
                            "c": "is_open(A)",
                            "d": "is_in(C,D)",
                            "h": "is_open(D)"
                        },
                        "unified_ltl": "& & & W ! a b W ! b d W ! c h G i h F ! h"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "chicken": "A",
                                "fridge": "C"
                            },
                            {
                                "fridge": "B",
                                "window": "A"
                            },
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(B) is_in(A,C)",
                            "W ! is_open(A) is_open(B)",
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "don't enter A if you haven't visited B",
                            "you cannot enter B if you haven't put A into the C",
                            "never open A before you open B",
                            "remember to close the A if you open it"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)",
                            "b": "agent_at(bathroom)",
                            "c": "is_in(chicken,fridge)",
                            "d": "is_open(window)",
                            "h": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "chicken",
                            "B": "fridge",
                            "C": "livingroom",
                            "D": "bathroom",
                            "H": "window"
                        },
                        "predicate": {
                            "a": "is_open(B)",
                            "b": "agent_at(D)",
                            "c": "is_in(A,B)",
                            "d": "is_open(H)",
                            "h": "agent_at(C)"
                        },
                        "unified_ltl": "& & & W ! h b W ! b c W ! d a G i a F ! a"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "chicken": "C",
                                "fridge": "B"
                            },
                            {
                                "fridge": "B",
                                "window": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(A) is_in(C,B)",
                            "W ! is_open(A) is_open(B)",
                            "G i is_open(A) F ! is_open(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to go to B before entering A",
                            "put C into B before you enter A",
                            "don't open A before you open B",
                            "if you open A, you must close it later",
                            "you can go to A three times at most"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(chicken,fridge)",
                            "b": "agent_at(bathroom)",
                            "c": "is_open(fridge)",
                            "d": "agent_at(livingroom)",
                            "h": "is_open(window)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "window",
                            "C": "livingroom",
                            "D": "bathroom",
                            "H": "chicken"
                        },
                        "predicate": {
                            "a": "is_in(H,A)",
                            "b": "agent_at(D)",
                            "c": "is_open(A)",
                            "d": "agent_at(C)",
                            "h": "is_open(B)"
                        },
                        "unified_ltl": "& & & & W ! d b W ! b a W ! h c G i c F ! c ! F & d U d & ! d U ! d F & d U d & ! d U ! d F & d U d & ! d U ! d F d"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "B",
                                "chicken": "A",
                                "fridge": "C"
                            },
                            {
                                "fridge": "B",
                                "window": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(B) is_in(A,C)",
                            "W ! is_open(A) is_open(B)",
                            "G i is_open(A) F ! is_open(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't enter B if you haven't visited A",
                            "you cannot enter B if you haven't put A into the C",
                            "never open A before you open B",
                            "remember to close the A if you open it",
                            "you can go to A three times at most"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(window)",
                            "b": "is_in(chicken,fridge)",
                            "c": "is_open(fridge)",
                            "d": "agent_at(bathroom)",
                            "h": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "fridge",
                            "C": "chicken",
                            "D": "livingroom",
                            "H": "window"
                        },
                        "predicate": {
                            "a": "is_open(H)",
                            "b": "is_in(C,B)",
                            "c": "is_open(B)",
                            "d": "agent_at(A)",
                            "h": "agent_at(D)"
                        },
                        "unified_ltl": "& & & & W ! h d W ! d b W ! a c G i c F ! c ! F & h U h & ! h U ! h F & h U h & ! h U ! h F & h U h & ! h U ! h F h"
                    }
                }
            },
            "71_1": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "chicken": "C",
                                "coffeemaker": "A",
                                "microwave": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(A) is_in(C,B)"
                        ],
                        "sym_utt": [
                            "don't switch on A if you haven't put C in B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(chicken,microwave)",
                            "b": "is_switchedon(coffeemaker)"
                        },
                        "object": {
                            "A": "coffeemaker",
                            "B": "microwave",
                            "C": "chicken"
                        },
                        "predicate": {
                            "a": "is_in(C,B)",
                            "b": "is_switchedon(A)"
                        },
                        "unified_ltl": "W ! b a"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "chicken": "A",
                                "coffeemaker": "B",
                                "microwave": "C"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(B) is_in(A,C)"
                        ],
                        "sym_utt": [
                            "before you put A in C you cannot switch on B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(chicken,microwave)",
                            "b": "is_switchedon(coffeemaker)"
                        },
                        "object": {
                            "A": "chicken",
                            "B": "coffeemaker",
                            "C": "microwave"
                        },
                        "predicate": {
                            "a": "is_in(A,C)",
                            "b": "is_switchedon(B)"
                        },
                        "unified_ltl": "W ! b a"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "chicken": "B",
                                "toilet": "A"
                            },
                            {
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) is_grabbed(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you can go to A but only after picking up B",
                            "you can visit A at most three times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "is_grabbed(chicken)",
                            "c": "agent_at(toilet)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "toilet",
                            "C": "chicken"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "is_grabbed(C)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& W ! c b ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "chicken": "A",
                                "toilet": "B"
                            },
                            {
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) is_grabbed(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "only after picking up A you can go to B",
                            "don't visit A more than three times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(toilet)",
                            "c": "is_grabbed(chicken)"
                        },
                        "object": {
                            "A": "chicken",
                            "B": "livingroom",
                            "C": "toilet"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(C)",
                            "c": "is_grabbed(A)"
                        },
                        "unified_ltl": "& W ! b c ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "coffeemaker": "B",
                                "cutlets": "A"
                            },
                            {
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "chicken": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(B) is_grabbed(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(B) G ! is_grabbed(A)"
                        ],
                        "sym_utt": [
                            "you have to pick up A before turning on the B",
                            "you can visit A at most three times",
                            "don't pick up A if you have been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_grabbed(cutlets)",
                            "b": "agent_at(livingroom)",
                            "c": "is_switchedon(coffeemaker)",
                            "d": "is_grabbed(chicken)",
                            "h": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "cutlets",
                            "C": "chicken",
                            "D": "livingroom",
                            "H": "coffeemaker"
                        },
                        "predicate": {
                            "a": "is_grabbed(B)",
                            "b": "agent_at(D)",
                            "c": "is_switchedon(H)",
                            "d": "is_grabbed(C)",
                            "h": "agent_at(A)"
                        },
                        "unified_ltl": "& & W ! c a ! F & b U b & ! b U ! b F & b U b & ! b U ! b F & b U b & ! b U ! b F b G i h G ! d"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "coffeemaker": "B",
                                "cutlets": "A"
                            },
                            {
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "chicken": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(B) is_grabbed(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) G ! is_grabbed(B)"
                        ],
                        "sym_utt": [
                            "don't turn on B until you pick up the A",
                            "don't visit A more than three times",
                            "once you have been to A, you cannot pick up B anymore"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "is_grabbed(cutlets)",
                            "c": "is_switchedon(coffeemaker)",
                            "d": "is_grabbed(chicken)",
                            "h": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "coffeemaker",
                            "B": "chicken",
                            "C": "livingroom",
                            "D": "bathroom",
                            "H": "cutlets"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "is_grabbed(H)",
                            "c": "is_switchedon(A)",
                            "d": "is_grabbed(B)",
                            "h": "agent_at(D)"
                        },
                        "unified_ltl": "& & W ! c b ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a G i h G ! d"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "coffeemaker": "A",
                                "cutlets": "B"
                            },
                            {
                                "chicken": "B",
                                "coffeemaker": "A",
                                "microwave": "C"
                            },
                            {
                                "chicken": "B",
                                "toilet": "A"
                            },
                            {
                                "bathroom": "B",
                                "chicken": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(A) is_grabbed(B)",
                            "W ! is_switchedon(A) is_in(B,C)",
                            "W ! agent_at(A) is_grabbed(B)",
                            "G i agent_at(B) G ! is_grabbed(A)"
                        ],
                        "sym_utt": [
                            "you have to pick up B before turning on the A",
                            "don't switch on A if you haven't put B in C",
                            "you can go to A but only after picking up B",
                            "don't pick up A if you have been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_switchedon(coffeemaker)",
                            "b": "is_grabbed(chicken)",
                            "c": "is_in(chicken,microwave)",
                            "d": "agent_at(bathroom)",
                            "h": "is_grabbed(cutlets)",
                            "j": "agent_at(toilet)"
                        },
                        "object": {
                            "A": "toilet",
                            "B": "coffeemaker",
                            "C": "chicken",
                            "D": "cutlets",
                            "H": "microwave",
                            "J": "bathroom"
                        },
                        "predicate": {
                            "a": "is_switchedon(B)",
                            "b": "is_grabbed(C)",
                            "c": "is_in(C,H)",
                            "d": "agent_at(J)",
                            "h": "is_grabbed(D)",
                            "j": "agent_at(A)"
                        },
                        "unified_ltl": "& & & W ! a h W ! a c W ! j b G i d G ! b"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "coffeemaker": "B",
                                "cutlets": "A"
                            },
                            {
                                "chicken": "C",
                                "coffeemaker": "B",
                                "microwave": "A"
                            },
                            {
                                "chicken": "B",
                                "toilet": "A"
                            },
                            {
                                "bathroom": "B",
                                "chicken": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(B) is_grabbed(A)",
                            "W ! is_switchedon(B) is_in(C,A)",
                            "W ! agent_at(A) is_grabbed(B)",
                            "G i agent_at(B) G ! is_grabbed(A)"
                        ],
                        "sym_utt": [
                            "don't turn on B until you pick up the A",
                            "before you put C in A you cannot switch on B",
                            "only after picking up B you can go to A",
                            "once you have been to B, you cannot pick up A anymore"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(chicken,microwave)",
                            "b": "is_grabbed(cutlets)",
                            "c": "is_grabbed(chicken)",
                            "d": "agent_at(toilet)",
                            "h": "is_switchedon(coffeemaker)",
                            "j": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "microwave",
                            "B": "coffeemaker",
                            "C": "toilet",
                            "D": "cutlets",
                            "H": "bathroom",
                            "J": "chicken"
                        },
                        "predicate": {
                            "a": "is_in(J,A)",
                            "b": "is_grabbed(D)",
                            "c": "is_grabbed(J)",
                            "d": "agent_at(C)",
                            "h": "is_switchedon(B)",
                            "j": "agent_at(H)"
                        },
                        "unified_ltl": "& & & W ! h b W ! h a W ! d c G i j G ! c"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "coffeemaker": "B",
                                "cutlets": "A"
                            },
                            {
                                "chicken": "B",
                                "coffeemaker": "C",
                                "microwave": "A"
                            },
                            {
                                "chicken": "A",
                                "toilet": "B"
                            },
                            {
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "chicken": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(B) is_grabbed(A)",
                            "W ! is_switchedon(C) is_in(B,A)",
                            "W ! agent_at(B) is_grabbed(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) G ! is_grabbed(B)"
                        ],
                        "sym_utt": [
                            "you have to pick up A before turning on the B",
                            "don't switch on C if you haven't put B in A",
                            "you can go to B but only after picking up A",
                            "you can visit A at most three times",
                            "don't pick up B if you have been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_grabbed(cutlets)",
                            "b": "is_grabbed(chicken)",
                            "c": "agent_at(toilet)",
                            "d": "is_switchedon(coffeemaker)",
                            "h": "is_in(chicken,microwave)",
                            "j": "agent_at(livingroom)",
                            "k": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "coffeemaker",
                            "B": "chicken",
                            "C": "cutlets",
                            "D": "toilet",
                            "H": "microwave",
                            "J": "livingroom",
                            "K": "bathroom"
                        },
                        "predicate": {
                            "a": "is_grabbed(C)",
                            "b": "is_grabbed(B)",
                            "c": "agent_at(D)",
                            "d": "is_switchedon(A)",
                            "h": "is_in(B,H)",
                            "j": "agent_at(J)",
                            "k": "agent_at(K)"
                        },
                        "unified_ltl": "& & & & W ! d a W ! d h W ! c b ! F & j U j & ! j U ! j F & j U j & ! j U ! j F & j U j & ! j U ! j F j G i k G ! b"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "coffeemaker": "A",
                                "cutlets": "B"
                            },
                            {
                                "chicken": "C",
                                "coffeemaker": "A",
                                "microwave": "B"
                            },
                            {
                                "chicken": "A",
                                "toilet": "B"
                            },
                            {
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "chicken": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! is_switchedon(A) is_grabbed(B)",
                            "W ! is_switchedon(A) is_in(C,B)",
                            "W ! agent_at(B) is_grabbed(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(B) G ! is_grabbed(A)"
                        ],
                        "sym_utt": [
                            "don't turn on A until you pick up the B",
                            "before you put C in B you cannot switch on A",
                            "only after picking up A you can go to B",
                            "don't visit A more than three times",
                            "once you have been to B, you cannot pick up A anymore"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "is_switchedon(coffeemaker)",
                            "c": "agent_at(toilet)",
                            "d": "is_in(chicken,microwave)",
                            "h": "is_grabbed(chicken)",
                            "j": "agent_at(livingroom)",
                            "k": "is_grabbed(cutlets)"
                        },
                        "object": {
                            "A": "microwave",
                            "B": "livingroom",
                            "C": "toilet",
                            "D": "bathroom",
                            "H": "coffeemaker",
                            "J": "chicken",
                            "K": "cutlets"
                        },
                        "predicate": {
                            "a": "agent_at(D)",
                            "b": "is_switchedon(H)",
                            "c": "agent_at(C)",
                            "d": "is_in(J,A)",
                            "h": "is_grabbed(J)",
                            "j": "agent_at(B)",
                            "k": "is_grabbed(K)"
                        },
                        "unified_ltl": "& & & & W ! b k W ! b d W ! c h ! F & j U j & ! j U ! j F & j U j & ! j U ! j F & j U j & ! j U ! j F j G i a G ! h"
                    }
                }
            },
            "72_2": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "you have to close the A if you have open the A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)"
                        },
                        "object": {
                            "A": "fridge"
                        },
                        "predicate": {
                            "a": "is_open(A)"
                        },
                        "unified_ltl": "G i a F ! a"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "fridge": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i is_open(A) F ! is_open(A)"
                        ],
                        "sym_utt": [
                            "don't forget to close the A if you ever open it"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)"
                        },
                        "object": {
                            "A": "fridge"
                        },
                        "predicate": {
                            "a": "is_open(A)"
                        },
                        "unified_ltl": "G i a F ! a"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "cutlets": "B",
                                "fridge": "C",
                                "livingroom": "A"
                            },
                            {
                                "cutlets": "A",
                                "microwave": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) is_in(B,C)",
                            "G ! is_in(A,B)"
                        ],
                        "sym_utt": [
                            "place the B in the C before you go to A",
                            "don't put A in the B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(cutlets,microwave)",
                            "b": "agent_at(livingroom)",
                            "c": "is_in(cutlets,fridge)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "microwave",
                            "C": "cutlets",
                            "D": "fridge"
                        },
                        "predicate": {
                            "a": "is_in(C,B)",
                            "b": "agent_at(A)",
                            "c": "is_in(C,D)"
                        },
                        "unified_ltl": "& W ! b c G ! a"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "cutlets": "A",
                                "fridge": "C",
                                "livingroom": "B"
                            },
                            {
                                "cutlets": "A",
                                "microwave": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) is_in(A,C)",
                            "G ! is_in(A,B)"
                        ],
                        "sym_utt": [
                            "before you go to B you must put A int C",
                            "you can never put A in the B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "is_in(cutlets,fridge)",
                            "c": "is_in(cutlets,microwave)"
                        },
                        "object": {
                            "A": "cutlets",
                            "B": "livingroom",
                            "C": "fridge",
                            "D": "microwave"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "is_in(A,C)",
                            "c": "is_in(A,D)"
                        },
                        "unified_ltl": "& W ! a b G ! c"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A",
                                "cutlets": "B"
                            },
                            {
                                "cutlets": "A",
                                "microwave": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(A) is_grabbed(B)",
                            "G ! is_in(A,B)"
                        ],
                        "sym_utt": [
                            "don't go B if you haven't been to A",
                            "you cannot walk to A before you pick up B",
                            "don't put A in the B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)",
                            "c": "is_in(cutlets,microwave)",
                            "d": "is_grabbed(cutlets)"
                        },
                        "object": {
                            "A": "microwave",
                            "B": "bathroom",
                            "C": "livingroom",
                            "D": "cutlets"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(C)",
                            "c": "is_in(D,A)",
                            "d": "is_grabbed(D)"
                        },
                        "unified_ltl": "& & W ! b a W ! a d G ! c"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A",
                                "cutlets": "B"
                            },
                            {
                                "cutlets": "A",
                                "microwave": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(A) is_grabbed(B)",
                            "G ! is_in(A,B)"
                        ],
                        "sym_utt": [
                            "you cannot go to B if you haven't been to A",
                            "you cannot walk to A before you pick up B",
                            "you can never put A in the B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_grabbed(cutlets)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bathroom)",
                            "d": "is_in(cutlets,microwave)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "cutlets",
                            "C": "microwave",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "is_grabbed(B)",
                            "b": "agent_at(D)",
                            "c": "agent_at(A)",
                            "d": "is_in(B,C)"
                        },
                        "unified_ltl": "& & W ! b c W ! c a G ! d"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "B",
                                "cutlets": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "cutlets": "A",
                                "microwave": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(B) is_grabbed(A)",
                            "G i is_open(A) F ! is_open(A)",
                            "G ! is_in(A,B)"
                        ],
                        "sym_utt": [
                            "don't go B if you haven't been to A",
                            "you cannot walk to B before you pick up A",
                            "you have to close A if you have open A",
                            "don't put A in the B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(livingroom)",
                            "d": "is_grabbed(cutlets)",
                            "h": "is_in(cutlets,microwave)"
                        },
                        "object": {
                            "A": "fridge",
                            "B": "bathroom",
                            "C": "cutlets",
                            "D": "livingroom",
                            "H": "microwave"
                        },
                        "predicate": {
                            "a": "is_open(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(D)",
                            "d": "is_grabbed(C)",
                            "h": "is_in(C,H)"
                        },
                        "unified_ltl": "& & & W ! c b W ! b d G i a F ! a G ! h"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "B",
                                "cutlets": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "cutlets": "B",
                                "microwave": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(B) is_grabbed(A)",
                            "G i is_open(A) F ! is_open(A)",
                            "G ! is_in(B,A)"
                        ],
                        "sym_utt": [
                            "you cannot go to B if you haven't been to A",
                            "you cannot walk to B before you pick up A",
                            "don't forget to close the A if you ever open it",
                            "you can never put B in the A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "is_open(fridge)",
                            "c": "is_grabbed(cutlets)",
                            "d": "agent_at(livingroom)",
                            "h": "is_in(cutlets,microwave)"
                        },
                        "object": {
                            "A": "microwave",
                            "B": "fridge",
                            "C": "cutlets",
                            "D": "bathroom",
                            "H": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(D)",
                            "b": "is_open(B)",
                            "c": "is_grabbed(C)",
                            "d": "agent_at(H)",
                            "h": "is_in(C,A)"
                        },
                        "unified_ltl": "& & & W ! d a W ! a c G i b F ! b G ! h"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A",
                                "cutlets": "B"
                            },
                            {
                                "cutlets": "A",
                                "fridge": "B",
                                "livingroom": "C"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "cutlets": "B",
                                "microwave": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(A) is_grabbed(B)",
                            "W ! agent_at(C) is_in(A,B)",
                            "G i is_open(A) F ! is_open(A)",
                            "G ! is_in(B,A)"
                        ],
                        "sym_utt": [
                            "don't go B if you haven't been to A",
                            "you cannot walk to A before you pick up B",
                            "place the A in the B before you go to C",
                            "you have to close A if you have open A",
                            "don't put B in the A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_open(fridge)",
                            "b": "agent_at(livingroom)",
                            "c": "is_in(cutlets,fridge)",
                            "d": "is_grabbed(cutlets)",
                            "h": "is_in(cutlets,microwave)",
                            "j": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "cutlets",
                            "B": "bathroom",
                            "C": "livingroom",
                            "D": "microwave",
                            "H": "fridge"
                        },
                        "predicate": {
                            "a": "is_open(H)",
                            "b": "agent_at(C)",
                            "c": "is_in(A,H)",
                            "d": "is_grabbed(A)",
                            "h": "is_in(A,D)",
                            "j": "agent_at(B)"
                        },
                        "unified_ltl": "& & & & W ! b j W ! j d W ! b c G i a F ! a G ! h"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "cutlets": "A"
                            },
                            {
                                "cutlets": "B",
                                "fridge": "C",
                                "livingroom": "A"
                            },
                            {
                                "fridge": "A"
                            },
                            {
                                "cutlets": "A",
                                "microwave": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(B) is_grabbed(A)",
                            "W ! agent_at(A) is_in(B,C)",
                            "G i is_open(A) F ! is_open(A)",
                            "G ! is_in(A,B)"
                        ],
                        "sym_utt": [
                            "you cannot go to A if you haven't been to B",
                            "you cannot walk to B before you pick up A",
                            "before you go to A you must put B int C",
                            "don't forget to close the A if you ever open it",
                            "you can never put A in the B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "is_in(cutlets,fridge)",
                            "b": "is_open(fridge)",
                            "c": "is_in(cutlets,microwave)",
                            "d": "is_grabbed(cutlets)",
                            "h": "agent_at(bathroom)",
                            "j": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "cutlets",
                            "B": "livingroom",
                            "C": "bathroom",
                            "D": "microwave",
                            "H": "fridge"
                        },
                        "predicate": {
                            "a": "is_in(A,H)",
                            "b": "is_open(H)",
                            "c": "is_in(A,D)",
                            "d": "is_grabbed(A)",
                            "h": "agent_at(C)",
                            "j": "agent_at(B)"
                        },
                        "unified_ltl": "& & & & W ! j h W ! h d W ! j a G i b F ! b G ! c"
                    }
                }
            }
        }
    },
    "rooms": {
        "0": {
            "0_1": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "go to A means you have to go to B in the future"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "G i b F a"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to go to A if you go to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "G i a F b"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(B) F agent_at(A)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to go to A later if you have visited B",
                            "go to B means you have to go to A in the future"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "& G i a F b G i a F b"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(B) X agent_at(A)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "when you go to B, enter A afterward",
                            "you have to go to A if you go to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "& G i a X b G i a F b"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to enter A before B",
                            "you have to enter B before going into A",
                            "go to B means you have to go to A later"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bedroom)",
                            "d": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "livingroom",
                            "C": "bedroom",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(C)",
                            "d": "agent_at(D)"
                        },
                        "unified_ltl": "& & W ! d b W ! b c G i d F a"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't go to A before B",
                            "enter A before B",
                            "you can go to B but then you will need to go to A too"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(bedroom)",
                            "d": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bathroom",
                            "C": "bedroom",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(C)",
                            "d": "agent_at(D)"
                        },
                        "unified_ltl": "& & W ! b d W ! d c G i b F a"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(B) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to enter B before A",
                            "you have to enter A before going into B",
                            "go to B means you have to go to A in the future",
                            "go to A means you have to go to B later"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(bedroom)",
                            "d": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "bedroom",
                            "C": "kitchen",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(B)",
                            "d": "agent_at(D)"
                        },
                        "unified_ltl": "& & & W ! b d W ! d c G i d F a G i b F a"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't go to B before A",
                            "enter A before B",
                            "you have to go to B if you go to A",
                            "you can go to B but then you will need to go to A too"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(kitchen)",
                            "c": "agent_at(bedroom)",
                            "d": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "livingroom",
                            "C": "kitchen",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(C)",
                            "c": "agent_at(A)",
                            "d": "agent_at(D)"
                        },
                        "unified_ltl": "& & & W ! d a W ! a c G i a F b G i d F b"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(A) F agent_at(B)",
                            "G i agent_at(A) F agent_at(B)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to enter B before A",
                            "you have to enter B before going into A",
                            "you have to go to B later if you have visited A",
                            "go to A means you have to go to B in the future",
                            "go to A means you have to go to B later"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(bedroom)",
                            "d": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "livingroom",
                            "C": "bedroom",
                            "D": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(D)",
                            "b": "agent_at(A)",
                            "c": "agent_at(C)",
                            "d": "agent_at(B)"
                        },
                        "unified_ltl": "& & & & W ! b d W ! d c G i d F a G i d F a G i b F a"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(A) X agent_at(B)",
                            "G i agent_at(A) F agent_at(B)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't go to B before A",
                            "enter B before A",
                            "when you go to A, enter B afterward",
                            "you have to go to B if you go to A",
                            "you can go to B but then you will need to go to A too"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "kitchen",
                            "C": "bedroom",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)",
                            "c": "agent_at(D)",
                            "d": "agent_at(C)"
                        },
                        "unified_ltl": "& & & & W ! c b W ! b d G i b X a G i b F a G i c F a"
                    }
                }
            },
            "0_10": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to enter B before A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)"
                        },
                        "unified_ltl": "W ! a b"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't go to B until you enter A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "W ! a b"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(A) F agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "entering A means you have to visit B once",
                            "you can only go to A twice"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "livingroom",
                            "C": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& G i b F c ! F & a U a & ! a U ! a F a"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(B) F agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "entering B means you have to visit A once",
                            "don't go to A more than twice"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "kitchen",
                            "C": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& G i a F b ! F & c U c & ! c U ! c F & c U c & ! c U ! c F c"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bedroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(B) F agent_at(A)",
                            "G i agent_at(B) F agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to enter A in the future if you have entered B",
                            "entering B means you have to visit A once",
                            "don't go to A more than three times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(livingroom)",
                            "d": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "kitchen",
                            "C": "bathroom",
                            "D": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(C)",
                            "c": "agent_at(A)",
                            "d": "agent_at(D)"
                        },
                        "unified_ltl": "& & G i a F c G i b F c ! F & d U d & ! d U ! d F & d U d & ! d U ! d F & d U d & ! d U ! d F d"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bedroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(A) F agent_at(B)",
                            "G i agent_at(A) F agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you can enter A, but you will have to visit B in the future too",
                            "entering A means you have to visit B once",
                            "only visiting A less than three times is allowed"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(livingroom)",
                            "d": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bathroom",
                            "C": "livingroom",
                            "D": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(D)",
                            "c": "agent_at(C)",
                            "d": "agent_at(B)"
                        },
                        "unified_ltl": "& & G i a F c G i d F c ! F & b U b & ! b U ! b F & b U b & ! b U ! b F b"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            },
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to enter A before B",
                            "entering A means you have to visit B once",
                            "you can only go to A twice",
                            "don't go to A more than three times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(livingroom)",
                            "d": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "bedroom",
                            "C": "kitchen",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)",
                            "c": "agent_at(D)",
                            "d": "agent_at(C)"
                        },
                        "unified_ltl": "& & & W ! d b G i b F c ! F & d U d & ! d U ! d F d ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            },
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(B) F agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't go to B until you enter A",
                            "entering B means you have to visit A once",
                            "don't go to A more than twice",
                            "only visiting A less than three times is allowed"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(kitchen)",
                            "d": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "livingroom",
                            "C": "bedroom",
                            "D": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(C)",
                            "c": "agent_at(D)",
                            "d": "agent_at(B)"
                        },
                        "unified_ltl": "& & & W ! c a G i a F d ! F & c U c & ! c U ! c F & c U c & ! c U ! c F c ! F & b U b & ! b U ! b F & b U b & ! b U ! b F b"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(A) F agent_at(B)",
                            "G i agent_at(A) F agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to enter B before A",
                            "you have to enter B in the future if you have entered A",
                            "entering A means you have to visit B once",
                            "you can only go to A twice",
                            "don't go to A more than three times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bedroom)",
                            "d": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "kitchen",
                            "C": "bathroom",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(D)",
                            "c": "agent_at(A)",
                            "d": "agent_at(C)"
                        },
                        "unified_ltl": "& & & & W ! a d G i a F b G i d F b ! F & a U a & ! a U ! a F a ! F & c U c & ! c U ! c F & c U c & ! c U ! c F & c U c & ! c U ! c F c"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(B) F agent_at(A)",
                            "G i agent_at(B) F agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't go to A until you enter B",
                            "you can enter B, but you will have to visit A in the future too",
                            "entering B means you have to visit A once",
                            "don't go to A more than twice",
                            "only visiting A less than three times is allowed"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "livingroom",
                            "C": "kitchen",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)",
                            "c": "agent_at(D)",
                            "d": "agent_at(C)"
                        },
                        "unified_ltl": "& & & & W ! d c G i d F a G i c F a ! F & d U d & ! d U ! d F & d U d & ! d U ! d F d ! F & b U b & ! b U ! b F & b U b & ! b U ! b F b"
                    }
                }
            },
            "0_2": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to enter B before A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "W ! b a"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "only go to B after you visit A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "W ! a b"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't enter A before B",
                            "don't enter A if you haven't enter B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(kitchen)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom",
                            "C": "bedroom",
                            "D": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(D)",
                            "c": "agent_at(B)",
                            "d": "agent_at(C)"
                        },
                        "unified_ltl": "& W ! c d W ! a b"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "you cannot enter B if you haven't visited A",
                            "don't enter B if you haven't enter A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "livingroom",
                            "C": "bedroom",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(B)",
                            "c": "agent_at(D)",
                            "d": "agent_at(A)"
                        },
                        "unified_ltl": "& W ! c a W ! b d"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to enter B before A",
                            "don't enter A before B",
                            "don't enter A if you haven't enter B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "kitchen",
                            "C": "bedroom",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(C)",
                            "c": "agent_at(D)",
                            "d": "agent_at(A)"
                        },
                        "unified_ltl": "& & W ! d c W ! c b W ! d a"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "only go to A after you visit B",
                            "you cannot enter A if you haven't visited B",
                            "don't enter A if you haven't enter B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(livingroom)",
                            "d": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom",
                            "C": "kitchen",
                            "D": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(D)",
                            "c": "agent_at(A)",
                            "d": "agent_at(C)"
                        },
                        "unified_ltl": "& & W ! c a W ! a b W ! c d"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) G ! agent_at(B)",
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't enter B before A",
                            "you can go to A at most twice",
                            "you cannot go to B if you have visited A",
                            "don't enter B if you haven't enter A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bedroom",
                            "C": "livingroom",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(C)",
                            "c": "agent_at(D)",
                            "d": "agent_at(B)"
                        },
                        "unified_ltl": "& & & W ! c d ! F & d U d & ! d U ! d F & d U d & ! d U ! d F d G i a G ! c W ! b a"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) G ! agent_at(B)",
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "you cannot enter B if you haven't visited A",
                            "you are not allowed to go to A more than two times",
                            "you cannot go to B if you have visited A",
                            "don't enter B if you haven't enter A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bedroom)",
                            "d": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "kitchen",
                            "C": "livingroom",
                            "D": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(C)",
                            "c": "agent_at(D)",
                            "d": "agent_at(B)"
                        },
                        "unified_ltl": "& & & W ! a c ! F & c U c & ! c U ! c F & c U c & ! c U ! c F c G i d G ! a W ! b d"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(A) agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(B) G ! agent_at(A)",
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to enter A before B",
                            "don't enter A before B",
                            "you can go to A at most twice",
                            "you cannot go to A if you have visited B",
                            "don't enter A if you haven't enter B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bedroom)",
                            "d": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "livingroom",
                            "C": "kitchen",
                            "D": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(D)",
                            "d": "agent_at(C)"
                        },
                        "unified_ltl": "& & & & W ! b a W ! a c ! F & c U c & ! c U ! c F & c U c & ! c U ! c F c G i d G ! a W ! b d"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(B) agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) G ! agent_at(B)",
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "only go to A after you visit B",
                            "you cannot enter B if you haven't visited A",
                            "you are not allowed to go to A more than two times",
                            "you cannot go to B if you have visited A",
                            "don't enter B if you haven't enter A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "livingroom",
                            "C": "bedroom",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(C)",
                            "c": "agent_at(D)",
                            "d": "agent_at(B)"
                        },
                        "unified_ltl": "& & & & W ! d c W ! c b ! F & b U b & ! b U ! b F & b U b & ! b U ! b F b G i a G ! c W ! d a"
                    }
                }
            },
            "0_5": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to enter B before A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "W ! b a"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "no one can enter A before B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "W ! b a"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you can only go to A once",
                            "go to B means you have to visit A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "& ! F & a U a & ! a U ! a F a G i a F b"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "never go to A twice",
                            "go to A means you have to visit B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)"
                        },
                        "unified_ltl": "& ! F & a U a & ! a U ! a F a G i a F b"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) G ! agent_at(B)"
                        ],
                        "sym_utt": [
                            "you can only go to A once",
                            "you have to visit A at most two times",
                            "you cannot go to B if A is visited"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "kitchen",
                            "C": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& & ! F & a U a & ! a U ! a F a ! F & b U b & ! b U ! b F & b U b & ! b U ! b F b G i c G ! a"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G (agent_at(B) & ! agent_at(A))"
                        ],
                        "sym_utt": [
                            "never go to A twice",
                            "you have to visit A at most two times",
                            "go to B and you mustn't go to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(bathroom)",
                            "c": "(agent_at(kitchen)",
                            "d": "agent_at(bathroom))"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "bathroom",
                            "C": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)",
                            "c": "(agent_at(C)",
                            "d": "agent_at(B))"
                        },
                        "unified_ltl": "& & ! F & b U b & ! b U ! b F b ! F & a U a & ! a U ! a F & a U a & ! a U ! a F a G c & ! b)"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            },
                            {
                                "bedroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to enter A before B",
                            "you can only go to A once",
                            "go to A means you have to visit B",
                            "you have to visit A at most two times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(livingroom)",
                            "d": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "kitchen",
                            "C": "bedroom",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(D)",
                            "d": "agent_at(B)"
                        },
                        "unified_ltl": "& & & W ! c b ! F & b U b & ! b U ! b F b G i b F d ! F & a U a & ! a U ! a F & a U a & ! a U ! a F a"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            },
                            {
                                "bedroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "no one can enter A before B",
                            "never go to A twice",
                            "go to A means you have to visit B",
                            "you have to visit A at most two times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(kitchen)",
                            "d": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom",
                            "C": "kitchen",
                            "D": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(D)",
                            "b": "agent_at(B)",
                            "c": "agent_at(C)",
                            "d": "agent_at(A)"
                        },
                        "unified_ltl": "& & & W ! d b ! F & b U b & ! b U ! b F b G i b F c ! F & a U a & ! a U ! a F & a U a & ! a U ! a F a"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            },
                            {
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(B) G ! agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to enter A before B",
                            "you can only go to A once",
                            "go to A means you have to visit B",
                            "you have to visit A at most two times",
                            "you cannot go to A if B is visited"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bedroom",
                            "C": "bathroom",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(C)",
                            "d": "agent_at(D)"
                        },
                        "unified_ltl": "& & & & W ! d c ! F & c U c & ! c U ! c F c G i c F a ! F & b U b & ! b U ! b F & b U b & ! b U ! b F b G i a G ! c"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            },
                            {
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G (agent_at(B) & ! agent_at(A))"
                        ],
                        "sym_utt": [
                            "no one can enter B before A",
                            "never go to A twice",
                            "go to A means you have to visit B",
                            "you have to visit A at most two times",
                            "go to B and you mustn't go to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bedroom)",
                            "d": "(agent_at(kitchen)",
                            "h": "agent_at(bathroom))",
                            "j": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "bathroom",
                            "C": "kitchen",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(D)",
                            "c": "agent_at(A)",
                            "d": "(agent_at(C)",
                            "h": "agent_at(B))",
                            "j": "agent_at(B)"
                        },
                        "unified_ltl": "& & & & W ! b j ! F & j U j & ! j U ! j F j G i j F a ! F & c U c & ! c U ! c F & c U c & ! c U ! c F c G (a & ! h"
                    }
                }
            },
            "0_7": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't go to B if you haven't been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)"
                        },
                        "unified_ltl": "W ! b a"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't go to A if you haven't been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)"
                        },
                        "unified_ltl": "W ! a b"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to visit A at most two times",
                            "you have to visit B if you ever been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bathroom",
                            "C": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(C)",
                            "c": "agent_at(A)"
                        },
                        "unified_ltl": "& ! F & c U c & ! c U ! c F & c U c & ! c U ! c F c G i a F b"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't enter A over two times",
                            "you have to visit A if you ever been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bedroom",
                            "C": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(C)",
                            "c": "agent_at(A)"
                        },
                        "unified_ltl": "& ! F & c U c & ! c U ! c F & c U c & ! c U ! c F c G i b F a"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "A",
                                "kitchen": "B"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(B) X agent_at(A)"
                        ],
                        "sym_utt": [
                            "you cannot go to A before B",
                            "don't go to A if you haven't been to B",
                            "you must visit A right after B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "kitchen",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)",
                            "c": "agent_at(C)"
                        },
                        "unified_ltl": "& & W ! b a W ! b c G i c X a"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) X agent_at(B)"
                        ],
                        "sym_utt": [
                            "never go to B if you haven't visit A",
                            "don't go to B if you haven't been to A",
                            "go to B right after you enter A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(kitchen)",
                            "c": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "livingroom",
                            "C": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& & W ! a b W ! a c G i c X b"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(B) X agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to visit A at most two times",
                            "you cannot go to B before A",
                            "don't go to B if you haven't been to A",
                            "you must visit A right after B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "kitchen",
                            "C": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& & & ! F & c U c & ! c U ! c F & c U c & ! c U ! c F c W ! a c W ! a b G i b X c"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) X agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't enter A over two times",
                            "never go to B if you haven't visit A",
                            "don't go to B if you haven't been to A",
                            "go to B right after you enter A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bedroom",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(B)",
                            "c": "agent_at(A)"
                        },
                        "unified_ltl": "& & & ! F & c U c & ! c U ! c F & c U c & ! c U ! c F c W ! c b W ! b a G i a X c"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "A",
                                "kitchen": "B"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(B) F agent_at(A)",
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(B) X agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to visit A at most two times",
                            "you cannot go to A before B",
                            "you have to visit A if you ever been to B",
                            "don't go to A if you haven't been to B",
                            "you must visit A right after B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "kitchen",
                            "C": "livingroom",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(C)",
                            "c": "agent_at(D)",
                            "d": "agent_at(B)"
                        },
                        "unified_ltl": "& & & & ! F & d U d & ! d U ! d F & d U d & ! d U ! d F d W ! a d G i c F a W ! a b G i b X d"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(A) F agent_at(B)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(B) X agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't enter A over two times",
                            "never go to B if you haven't visit A",
                            "you have to visit B if you ever been to A",
                            "don't go to B if you haven't been to A",
                            "go to A right after you enter B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(kitchen)",
                            "d": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "kitchen",
                            "C": "livingroom",
                            "D": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(C)",
                            "c": "agent_at(B)",
                            "d": "agent_at(D)"
                        },
                        "unified_ltl": "& & & & ! F & c U c & ! c U ! c F & c U c & ! c U ! c F c W ! c d G i a F d W ! d b G i b X c"
                    }
                }
            }
        },
        "1": {
            "12_2": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "go to B means you have to go to A in the future"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "G i a F b"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to go to A in the future if you have been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "G i a F b"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "you can visit A at most three times",
                            "go to A means you have to go to B in the future"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)"
                        },
                        "unified_ltl": "& ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a G i a F b"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "you cannot visit A more than three times",
                            "you have to go to B in the future if you have been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "& ! F & b U b & ! b U ! b F & b U b & ! b U ! b F & b U b & ! b U ! b F b G i b F a"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A",
                                "kitchen": "B"
                            },
                            {
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(B) F agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't go to A if you haven't been to B",
                            "if you visit B, you have to visit A too in the future",
                            "you can visit A at most three times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "kitchen",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)",
                            "c": "agent_at(C)"
                        },
                        "unified_ltl": "& & W ! b c G i a F b ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) X agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't go to B if you haven't been to A",
                            "if you visit A, you have to visit B afterward",
                            "you cannot visit A more than three times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "livingroom",
                            "C": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(C)",
                            "c": "agent_at(A)"
                        },
                        "unified_ltl": "& & W ! b a G i c X b ! F & c U c & ! c U ! c F & c U c & ! c U ! c F & c U c & ! c U ! c F c"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't go to B if you haven't been to A",
                            "if you visit A, you have to visit B too in the future",
                            "don't go to B before A is visited",
                            "go to A means you have to go to B in the future"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(kitchen)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "livingroom",
                            "C": "bedroom",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(D)",
                            "d": "agent_at(B)"
                        },
                        "unified_ltl": "& & & W ! c d G i b F c W ! c a G i b F c"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't go to B if you haven't been to A",
                            "if you visit A, you have to visit B afterward",
                            "never go to A before B",
                            "you have to go to B in the future if you have been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(kitchen)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "kitchen",
                            "C": "bathroom",
                            "D": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(C)",
                            "d": "agent_at(D)"
                        },
                        "unified_ltl": "& & & W ! c a G i b F c W ! c d G i b F c"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't go to B if you haven't been to A",
                            "if you visit A, you have to visit B too in the future",
                            "you can visit A at most three times",
                            "don't go to A before B is visited",
                            "go to A means you have to go to B in the future"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bedroom",
                            "C": "bathroom",
                            "D": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)",
                            "c": "agent_at(C)",
                            "d": "agent_at(D)"
                        },
                        "unified_ltl": "& & & & W ! c b G i d F c ! F & d U d & ! d U ! d F & d U d & ! d U ! d F & d U d & ! d U ! d F d W ! c a G i d F c"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(A) X agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't go to A if you haven't been to B",
                            "if you visit A, you have to visit B afterward",
                            "you cannot visit A more than three times",
                            "never go to B before A",
                            "you have to go to B in the future if you have been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(kitchen)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bedroom",
                            "C": "bathroom",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(D)",
                            "b": "agent_at(A)",
                            "c": "agent_at(C)",
                            "d": "agent_at(B)"
                        },
                        "unified_ltl": "& & & & W ! c a G i b X c ! F & b U b & ! b U ! b F & b U b & ! b U ! b F & b U b & ! b U ! b F b W ! c d G i b F c"
                    }
                }
            },
            "1_2": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't enter A if you haven't enter B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)"
                        },
                        "unified_ltl": "W ! a b"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G i agent_at(A) G ! agent_at(B)"
                        ],
                        "sym_utt": [
                            "you can enter A but you won't be able to enter B after that"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)"
                        },
                        "unified_ltl": "G i a G ! b"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(B) G ! agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't enter A before B",
                            "you cannot go to A if you have visited B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "livingroom",
                            "C": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)",
                            "c": "agent_at(C)"
                        },
                        "unified_ltl": "& W ! b a G i c G ! b"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(B) G ! agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't enter B before A",
                            "once you visited B, you will never be able to visit A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom",
                            "C": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(B)",
                            "c": "agent_at(A)"
                        },
                        "unified_ltl": "& W ! b c G i a G ! b"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) G ! agent_at(B)",
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "you can go to A at most twice",
                            "you cannot go to B if you have visited A",
                            "don't enter A if you haven't enter B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "bathroom",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(C)",
                            "c": "agent_at(A)"
                        },
                        "unified_ltl": "& & ! F & c U c & ! c U ! c F c G i c G ! a W ! c b"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) G ! agent_at(B)",
                            "G i agent_at(B) G ! agent_at(A)"
                        ],
                        "sym_utt": [
                            "you can go to A at most two times",
                            "once you visited A, you will never be able to visit B",
                            "you can enter B but you won't be able to enter A after that"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "livingroom",
                            "C": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(C)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& & ! F & a U a & ! a U ! a F & a U a & ! a U ! a F a G i a G ! b G i c G ! a"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) G ! agent_at(B)",
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to enter B before A",
                            "don't enter B before A",
                            "you cannot go to B if you have visited A",
                            "don't enter A if you haven't enter B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "livingroom",
                            "C": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)",
                            "c": "agent_at(C)"
                        },
                        "unified_ltl": "& & & W ! b c W ! c a G i b G ! c W ! b a"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) G ! agent_at(B)",
                            "G i agent_at(B) G ! agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't go to A before B",
                            "don't enter B before A",
                            "once you visited A, you will never be able to visit B",
                            "you can enter B but you won't be able to enter A after that"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "livingroom",
                            "C": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(C)",
                            "c": "agent_at(A)"
                        },
                        "unified_ltl": "& & & W ! c b W ! b a G i c G ! b G i a G ! c"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(A) agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) G ! agent_at(B)",
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to enter B before A",
                            "don't enter A before B",
                            "you can go to A at most twice",
                            "you cannot go to B if you have visited A",
                            "don't enter A if you haven't enter B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "bathroom",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(C)"
                        },
                        "unified_ltl": "& & & & W ! a b W ! b c ! F & a U a & ! a U ! a F a G i a G ! b W ! a c"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(B) agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) G ! agent_at(B)",
                            "G i agent_at(B) G ! agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't go to A before B",
                            "don't enter B before A",
                            "you can go to A at most two times",
                            "once you visited A, you will never be able to visit B",
                            "you can enter B but you won't be able to enter A after that"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "bathroom",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& & & & W ! b c W ! c a ! F & b U b & ! b U ! b F b G i b G ! c G i a G ! b"
                    }
                }
            },
            "4_3": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't go to A if you haven't been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)"
                        },
                        "unified_ltl": "W ! a b"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't enter A before B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)"
                        },
                        "unified_ltl": "W ! a b"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't go to B if you haven't been to A",
                            "don't go to B before entering A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "livingroom",
                            "C": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)",
                            "c": "agent_at(C)"
                        },
                        "unified_ltl": "& W ! c b W ! c a"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't enter A before B",
                            "don't go to A before entering B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom",
                            "C": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& W ! c a W ! a b"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't go to B before entering A",
                            "you can visit A at most three times",
                            "go to A means you have to go to B later"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bedroom)",
                            "d": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom",
                            "C": "bedroom",
                            "D": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)",
                            "c": "agent_at(C)",
                            "d": "agent_at(D)"
                        },
                        "unified_ltl": "& & W ! c b ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a G i b F d"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "don't go to A before entering B",
                            "you cannot visit A for more than three times",
                            "you must go to A if you have been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bedroom",
                            "C": "bathroom",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(D)",
                            "c": "agent_at(C)",
                            "d": "agent_at(B)"
                        },
                        "unified_ltl": "& & W ! d b ! F & c U c & ! c U ! c F & c U c & ! c U ! c F & c U c & ! c U ! c F c G i b F a"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to go to A before visit B",
                            "don't go to A if you haven't been to B",
                            "don't go to B before entering A",
                            "go to A means you have to go to B later"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(livingroom)",
                            "d": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bedroom",
                            "C": "livingroom",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(D)",
                            "b": "agent_at(B)",
                            "c": "agent_at(C)",
                            "d": "agent_at(A)"
                        },
                        "unified_ltl": "& & & W ! a d W ! b a W ! b c G i c F d"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(B) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "go to A before B",
                            "don't enter A before B",
                            "don't go to B before entering A",
                            "you must go to A if you have been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(kitchen)",
                            "c": "agent_at(bedroom)",
                            "d": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "livingroom",
                            "C": "bathroom",
                            "D": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(D)",
                            "d": "agent_at(B)"
                        },
                        "unified_ltl": "& & & W ! a b W ! a c W ! c d G i d F b"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(B) agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to go to A before visit B",
                            "don't go to A if you haven't been to B",
                            "don't go to B before entering A",
                            "you can visit A at most three times",
                            "go to A means you have to go to B later"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(kitchen)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "kitchen",
                            "C": "livingroom",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(D)",
                            "d": "agent_at(C)"
                        },
                        "unified_ltl": "& & & & W ! c b W ! a c W ! a d ! F & c U c & ! c U ! c F & c U c & ! c U ! c F & c U c & ! c U ! c F c G i d F b"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "kitchen": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(B) agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)"
                        ],
                        "sym_utt": [
                            "go to A before B",
                            "don't enter B before A",
                            "don't go to B before entering A",
                            "you cannot visit A for more than three times",
                            "you must go to B if you have been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(livingroom)",
                            "d": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bedroom",
                            "C": "livingroom",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(D)",
                            "c": "agent_at(C)",
                            "d": "agent_at(A)"
                        },
                        "unified_ltl": "& & & & W ! b d W ! b a W ! a c ! F & b U b & ! b U ! b F & b U b & ! b U ! b F & b U b & ! b U ! b F b G i c F d"
                    }
                }
            },
            "71_1": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you can go to A for at most three times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(A)"
                        },
                        "unified_ltl": "! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "you cannot visit A for more than three times"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(A)"
                        },
                        "unified_ltl": "! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bedroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G ! agent_at(A)",
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "avoid A at any time",
                            "don't go to B if you haven't been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bedroom",
                            "C": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(C)"
                        },
                        "unified_ltl": "& G ! c W ! b a"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bedroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G ! agent_at(A)",
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "never go to A",
                            "you cannot go to B if you haven't been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "bedroom",
                            "C": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(C)"
                        },
                        "unified_ltl": "& G ! a W ! b c"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G ! agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "G i agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "avoid A at any time",
                            "you have to go to B if you have been to A",
                            "go to A means you have to go bsck to A in the future"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "bathroom",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)",
                            "c": "agent_at(C)"
                        },
                        "unified_ltl": "& & G ! a G i b F a G i c F c"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G ! agent_at(A)",
                            "G i agent_at(A) X agent_at(B)",
                            "G i agent_at(A) F agent_at(A)"
                        ],
                        "sym_utt": [
                            "never go to A",
                            "you have to enter B once you have been to A",
                            "go to A means you have to go back to A in the future"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "bathroom",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& & G ! c G i b X c G i a F a"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G ! agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "avoid A at any time",
                            "you have to go to B if you have been to A",
                            "you can go to A for at most three times",
                            "don't go to B if you haven't been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "kitchen",
                            "B": "bedroom",
                            "C": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(C)",
                            "c": "agent_at(A)"
                        },
                        "unified_ltl": "& & & G ! b G i a F b ! F & c U c & ! c U ! c F & c U c & ! c U ! c F & c U c & ! c U ! c F c W ! a c"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "A",
                                "kitchen": "B"
                            }
                        ],
                        "sym_ltl": [
                            "G ! agent_at(A)",
                            "G i agent_at(A) X agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "never go to A",
                            "you have to enter B once you have been to A",
                            "you cannot visit A for more than three times",
                            "you cannot go to A if you haven't been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "kitchen",
                            "C": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& & & G ! a G i b X a ! F & c U c & ! c U ! c F & c U c & ! c U ! c F & c U c & ! c U ! c F c W ! b c"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "A",
                                "kitchen": "B"
                            }
                        ],
                        "sym_ltl": [
                            "G ! agent_at(A)",
                            "G i agent_at(B) F agent_at(A)",
                            "G i agent_at(A) F agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "avoid A at any time",
                            "you have to go to A if you have been to B",
                            "go to A means you have to go bsck to A in the future",
                            "you can go to A for at most three times",
                            "don't go to A if you haven't been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bedroom)",
                            "d": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom",
                            "C": "bedroom",
                            "D": "kitchen"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)",
                            "c": "agent_at(C)",
                            "d": "agent_at(D)"
                        },
                        "unified_ltl": "& & & & G ! a G i c F a G i b F b ! F & d U d & ! d U ! d F & d U d & ! d U ! d F & d U d & ! d U ! d F d W ! c d"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "livingroom": "A"
                            },
                            {
                                "kitchen": "A"
                            },
                            {
                                "bedroom": "B",
                                "kitchen": "A"
                            }
                        ],
                        "sym_ltl": [
                            "G ! agent_at(A)",
                            "G i agent_at(B) F agent_at(A)",
                            "G i agent_at(A) F agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "never go to A",
                            "you have to enter A once you have been to B",
                            "go to A means you have to go back to A in the future",
                            "you cannot visit A for more than three times",
                            "you cannot go to B if you haven't been to A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bedroom)",
                            "d": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "kitchen",
                            "C": "bedroom",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(D)",
                            "c": "agent_at(C)",
                            "d": "agent_at(A)"
                        },
                        "unified_ltl": "& & & & G ! d G i c F d G i b F b ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a W ! c a"
                    }
                }
            },
            "7_1": {
                "1": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to enter B before A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(B)",
                            "b": "agent_at(A)"
                        },
                        "unified_ltl": "W ! b a"
                    }
                },
                "1_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "never go to A if you haven't been to B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)"
                        },
                        "unified_ltl": "W ! b a"
                    }
                },
                "2": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "you can go to A for at most three times",
                            "don't enter B if you haven't enter A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(bathroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "bathroom",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(A)",
                            "c": "agent_at(B)"
                        },
                        "unified_ltl": "& ! F & c U c & ! c U ! c F & c U c & ! c U ! c F & c U c & ! c U ! c F c W ! a b"
                    }
                },
                "2_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't go to A for more than three times",
                            "don't enter A if you haven't enter B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "livingroom",
                            "C": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(C)"
                        },
                        "unified_ltl": "& ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a W ! b c"
                    }
                },
                "3": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(B) F agent_at(A)",
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "you can go to A for at most three times",
                            "you have to go to A if you have entered B",
                            "don't enter B if you haven't enter A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bedroom)",
                            "d": "agent_at(kitchen)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "kitchen",
                            "C": "livingroom",
                            "D": "bathroom"
                        },
                        "predicate": {
                            "a": "agent_at(D)",
                            "b": "agent_at(C)",
                            "c": "agent_at(A)",
                            "d": "agent_at(B)"
                        },
                        "unified_ltl": "& & ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a G i b F d W ! b c"
                    }
                },
                "3_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "don't go to A for more than three times",
                            "you have to go to B if you have entered A",
                            "don't enter A if you haven't enter B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(livingroom)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "livingroom",
                            "C": "kitchen",
                            "D": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(B)",
                            "c": "agent_at(A)",
                            "d": "agent_at(D)"
                        },
                        "unified_ltl": "& & ! F & c U c & ! c U ! c F & c U c & ! c U ! c F & c U c & ! c U ! c F c G i b F a W ! b d"
                    }
                },
                "4": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "W ! agent_at(A) agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "you have to enter A before B",
                            "don't enter A before B",
                            "you can go to A for at most three times",
                            "don't enter B if you haven't enter A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bathroom)",
                            "b": "agent_at(bedroom)",
                            "c": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "bathroom",
                            "B": "bedroom",
                            "C": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(C)"
                        },
                        "unified_ltl": "& & & W ! c a W ! a b ! F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a W ! c b"
                    }
                },
                "4_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "G i agent_at(B) F agent_at(A)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "never go to B if you haven't been to A",
                            "you have to enter B in order to enter A later",
                            "don't go to A for more than three times",
                            "don't enter A if you haven't enter B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(livingroom)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom",
                            "C": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(A)",
                            "b": "agent_at(B)",
                            "c": "agent_at(C)"
                        },
                        "unified_ltl": "& & & W ! a b G i c F b ! F & b U b & ! b U ! b F & b U b & ! b U ! b F & b U b & ! b U ! b F b W ! a c"
                    }
                },
                "5": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "B",
                                "livingroom": "A"
                            },
                            {
                                "bathroom": "A",
                                "bedroom": "B"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "kitchen": "B",
                                "livingroom": "A"
                            },
                            {
                                "bedroom": "B",
                                "livingroom": "A"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(A) agent_at(B)",
                            "W ! agent_at(A) agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "W ! agent_at(A) agent_at(B)"
                        ],
                        "sym_utt": [
                            "you have to enter B before A",
                            "don't enter A before B",
                            "you can go to A for at most three times",
                            "you have to go to B if you have entered A",
                            "don't enter A if you haven't enter B"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(bedroom)",
                            "b": "agent_at(kitchen)",
                            "c": "agent_at(bathroom)",
                            "d": "agent_at(livingroom)"
                        },
                        "object": {
                            "A": "livingroom",
                            "B": "bathroom",
                            "C": "kitchen",
                            "D": "bedroom"
                        },
                        "predicate": {
                            "a": "agent_at(D)",
                            "b": "agent_at(C)",
                            "c": "agent_at(B)",
                            "d": "agent_at(A)"
                        },
                        "unified_ltl": "& & & & W ! d c W ! c a ! F & c U c & ! c U ! c F & c U c & ! c U ! c F & c U c & ! c U ! c F c G i d F b W ! d a"
                    }
                },
                "5_diverse": {
                    "sub_trans": {
                        "placeholder": [
                            {
                                "bathroom": "A",
                                "livingroom": "B"
                            },
                            {
                                "bathroom": "B",
                                "bedroom": "A"
                            },
                            {
                                "bathroom": "A"
                            },
                            {
                                "kitchen": "A",
                                "livingroom": "B"
                            },
                            {
                                "bedroom": "A",
                                "livingroom": "B"
                            }
                        ],
                        "sym_ltl": [
                            "W ! agent_at(B) agent_at(A)",
                            "G i agent_at(A) F agent_at(B)",
                            "! F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F & agent_at(A) U agent_at(A) & ! agent_at(A) U ! agent_at(A) F agent_at(A)",
                            "G i agent_at(B) F agent_at(A)",
                            "W ! agent_at(B) agent_at(A)"
                        ],
                        "sym_utt": [
                            "never go to A if you haven't been to B",
                            "you have to enter A in order to enter B later",
                            "don't go to A for more than three times",
                            "you have to go to A if you have entered B",
                            "don't enter B if you haven't enter A"
                        ]
                    },
                    "unified_trans": {
                        "grounded_pred": {
                            "a": "agent_at(kitchen)",
                            "b": "agent_at(bathroom)",
                            "c": "agent_at(livingroom)",
                            "d": "agent_at(bedroom)"
                        },
                        "object": {
                            "A": "bedroom",
                            "B": "bathroom",
                            "C": "kitchen",
                            "D": "livingroom"
                        },
                        "predicate": {
                            "a": "agent_at(C)",
                            "b": "agent_at(B)",
                            "c": "agent_at(D)",
                            "d": "agent_at(A)"
                        },
                        "unified_ltl": "& & & & W ! c b G i d F b ! F & b U b & ! b U ! b F & b U b & ! b U ! b F & b U b & ! b U ! b F b G i c F a W ! c d"
                    }
                }
            }
        }
    }
}